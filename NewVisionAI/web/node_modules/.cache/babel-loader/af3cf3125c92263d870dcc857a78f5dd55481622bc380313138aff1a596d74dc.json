{"ast":null,"code":"var _jsxFileName = \"/Users/saban/Desktop/New VisionAi 2.0/NewVisionAI/web/src/components/FaceScanner/FaceScanner3D.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Typography, Button, CircularProgress, Slider, Tooltip, LinearProgress, Alert, IconButton } from '@mui/material';\nimport { CameraAlt as CameraIcon, Replay as ResetIcon, Check as ConfirmIcon, Fullscreen as FullscreenIcon, FlipCameraIos as FlipCameraIcon, Settings as SettingsIcon, ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon, BrightnessHigh as BrightnessIcon } from '@mui/icons-material';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\n// Styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: {\n    position: 'relative',\n    borderRadius: '16px',\n    overflow: 'hidden',\n    boxShadow: '0 4px 12px rgba(0,0,0,0.1)'\n  },\n  videoContainer: {\n    position: 'relative',\n    height: 500,\n    backgroundColor: '#000',\n    borderRadius: '16px',\n    overflow: 'hidden'\n  },\n  video: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover'\n  },\n  canvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    pointerEvents: 'none'\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    padding: '16px',\n    zIndex: 10\n  },\n  controls: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginTop: 'auto'\n  },\n  topControls: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%'\n  },\n  faceMaskContainer: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: '75%',\n    height: '75%',\n    borderRadius: '50%',\n    border: '2px dashed rgba(255, 255, 255, 0.6)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    pointerEvents: 'none'\n  },\n  progressContainer: {\n    position: 'absolute',\n    bottom: '80px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    width: '90%',\n    textAlign: 'center'\n  },\n  progressLabel: {\n    color: 'white',\n    textShadow: '0 0 5px rgba(0,0,0,0.7)',\n    marginBottom: '4px'\n  },\n  zoomControls: {\n    position: 'absolute',\n    right: '16px',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    borderRadius: '24px',\n    padding: '8px 0'\n  },\n  instructionText: {\n    color: 'white',\n    textShadow: '0 0 5px rgba(0,0,0,0.7)',\n    textAlign: 'center',\n    marginBottom: '16px',\n    maxWidth: '80%',\n    margin: '0 auto'\n  },\n  statusBox: {\n    position: 'absolute',\n    top: '16px',\n    left: '16px',\n    padding: '4px 8px',\n    backgroundColor: 'rgba(0,0,0,0.6)',\n    color: 'white',\n    borderRadius: '4px',\n    fontSize: '12px'\n  }\n};\n\n/**\n * 3D Face Scanner component that uses camera and AR techniques\n * to measure facial features and analyze face shape\n */\nconst FaceScanner3D = ({\n  onScanComplete\n}) => {\n  _s();\n  // Refs\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const canvasCtxRef = useRef(null);\n  const threeContainerRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const frameId = useRef(null);\n\n  // State\n  const [cameraReady, setCameraReady] = useState(false);\n  const [scanning, setScanning] = useState(false);\n  const [scanProgress, setScanProgress] = useState(0);\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [scanQuality, setScanQuality] = useState(0);\n  const [lightingQuality, setLightingQuality] = useState('unknown');\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [facingMode, setFacingMode] = useState('user');\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [showInstructions, setShowInstructions] = useState(true);\n  const [maskFit, setMaskFit] = useState('too_small'); // 'too_small', 'good', 'too_large'\n  const [detectionStatus, setDetectionStatus] = useState('waiting');\n\n  // Constants for face detection\n  const SCAN_DURATION = 10000; // 10 seconds\n  const SCAN_DELAY = 500; // Short delay before starting scan\n\n  // Initialize camera and canvas\n  useEffect(() => {\n    const setupCamera = async () => {\n      try {\n        // Get camera stream\n        const constraints = {\n          video: {\n            width: {\n              ideal: 1280\n            },\n            height: {\n              ideal: 720\n            },\n            facingMode: facingMode\n          }\n        };\n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n        // Set video source\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n\n          // Once video is ready, set up canvas\n          videoRef.current.onloadedmetadata = () => {\n            if (canvasRef.current) {\n              canvasRef.current.width = videoRef.current.videoWidth;\n              canvasRef.current.height = videoRef.current.videoHeight;\n\n              // Setup canvas context\n              canvasCtxRef.current = canvasRef.current.getContext('2d');\n\n              // Initialize lighting quality check\n              checkLightingQuality();\n              setCameraReady(true);\n            }\n          };\n        }\n      } catch (err) {\n        console.error('Error accessing camera:', err);\n        alert('Camera access is required for face scanning. Please allow camera access and try again.');\n      }\n    };\n    setupCamera();\n\n    // Cleanup function to stop camera when component unmounts\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n\n      // Stop animation frame\n      if (frameId.current) {\n        cancelAnimationFrame(frameId.current);\n      }\n\n      // Dispose Three.js resources\n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n      }\n    };\n  }, [facingMode]);\n\n  // Initialize Three.js scene\n  useEffect(() => {\n    if (cameraReady && threeContainerRef.current) {\n      // Create scene\n      const scene = new THREE.Scene();\n      sceneRef.current = scene;\n\n      // Create camera\n      const camera = new THREE.PerspectiveCamera(75, threeContainerRef.current.clientWidth / threeContainerRef.current.clientHeight, 0.1, 1000);\n      camera.position.z = 5;\n      cameraRef.current = camera;\n\n      // Create renderer\n      const renderer = new THREE.WebGLRenderer({\n        alpha: true\n      });\n      renderer.setSize(threeContainerRef.current.clientWidth, threeContainerRef.current.clientHeight);\n      threeContainerRef.current.appendChild(renderer.domElement);\n      rendererRef.current = renderer;\n\n      // Add some light\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n      scene.add(ambientLight);\n      const pointLight = new THREE.PointLight(0xffffff, 1);\n      pointLight.position.set(5, 5, 5);\n      scene.add(pointLight);\n\n      // Load face mesh model\n      const loader = new GLTFLoader();\n      loader.load(\n      // Replace with actual face mesh model URL\n      'https://threejs.org/examples/models/gltf/LeePerrySmith/LeePerrySmith.glb', gltf => {\n        // Scale and position the model\n        const model = gltf.scene;\n        model.scale.set(2, 2, 2);\n        model.position.set(0, 0, 0);\n        model.visible = false; // Hide initially\n        scene.add(model);\n\n        // Add wireframe material\n        model.traverse(child => {\n          if (child.isMesh) {\n            const wireframe = new THREE.WireframeGeometry(child.geometry);\n            const line = new THREE.LineSegments(wireframe);\n            line.material.color.set(0x00ff00);\n            line.material.linewidth = 1;\n            line.visible = false;\n            scene.add(line);\n          }\n        });\n      }, xhr => {\n        console.log(xhr.loaded / xhr.total * 100 + '% loaded');\n      }, error => {\n        console.error('Error loading model:', error);\n      });\n\n      // Animation function\n      const animate = () => {\n        frameId.current = requestAnimationFrame(animate);\n\n        // You would update the face tracking and mesh here\n        // in a real implementation\n\n        renderer.render(scene, camera);\n      };\n\n      // Start animation\n      animate();\n\n      // Resize handler\n      const handleResize = () => {\n        if (threeContainerRef.current) {\n          const width = threeContainerRef.current.clientWidth;\n          const height = threeContainerRef.current.clientHeight;\n          camera.aspect = width / height;\n          camera.updateProjectionMatrix();\n          renderer.setSize(width, height);\n        }\n      };\n      window.addEventListener('resize', handleResize);\n\n      // Clean up\n      return () => {\n        window.removeEventListener('resize', handleResize);\n        if (threeContainerRef.current && renderer.domElement) {\n          threeContainerRef.current.removeChild(renderer.domElement);\n        }\n      };\n    }\n  }, [cameraReady]);\n\n  // Mock face detection (in a real app, use a face-api.js or TensorFlow.js)\n  useEffect(() => {\n    let detectionInterval;\n\n    // Simulated face detection for the demo\n    if (cameraReady && !scanning) {\n      detectionInterval = setInterval(() => {\n        // Simulate random detection\n        const isDetected = Math.random() > 0.3; // 70% chance of detection\n        setFaceDetected(isDetected);\n\n        // Set quality based on face detection\n        const quality = isDetected ? Math.random() * 100 : 0;\n        setScanQuality(quality);\n\n        // Update mask fit\n        if (isDetected) {\n          const fitValue = Math.random();\n          if (fitValue < 0.2) {\n            setMaskFit('too_small');\n            setDetectionStatus('move_closer');\n          } else if (fitValue > 0.8) {\n            setMaskFit('too_large');\n            setDetectionStatus('move_back');\n          } else {\n            setMaskFit('good');\n            setDetectionStatus('good');\n          }\n        } else {\n          setDetectionStatus('waiting');\n        }\n      }, 500);\n    }\n    return () => {\n      if (detectionInterval) {\n        clearInterval(detectionInterval);\n      }\n    };\n  }, [cameraReady, scanning]);\n\n  // Handle scanning process\n  useEffect(() => {\n    let scanTimer;\n    let progressInterval;\n    if (scanning) {\n      // Small delay before starting scan\n      scanTimer = setTimeout(() => {\n        // Start progress timer\n        const startTime = Date.now();\n        progressInterval = setInterval(() => {\n          const elapsed = Date.now() - startTime;\n          const progress = Math.min(elapsed / SCAN_DURATION * 100, 100);\n          setScanProgress(progress);\n          if (progress >= 100) {\n            // Scan complete\n            clearInterval(progressInterval);\n            handleScanComplete();\n          }\n        }, 100);\n      }, SCAN_DELAY);\n    }\n    return () => {\n      clearTimeout(scanTimer);\n      clearInterval(progressInterval);\n    };\n  }, [scanning]);\n\n  // Check lighting quality\n  const checkLightingQuality = () => {\n    if (!videoRef.current || !canvasRef.current || !canvasCtxRef.current) return;\n    try {\n      // Draw video frame to canvas\n      canvasCtxRef.current.drawImage(videoRef.current, 0, 0, canvasRef.current.width, canvasRef.current.height);\n\n      // Get pixel data\n      const imageData = canvasCtxRef.current.getImageData(0, 0, canvasRef.current.width, canvasRef.current.height);\n      const data = imageData.data;\n\n      // Calculate average brightness\n      let totalBrightness = 0;\n      for (let i = 0; i < data.length; i += 4) {\n        // Convert RGB to brightness (simple average)\n        const brightness = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        totalBrightness += brightness;\n      }\n      const averageBrightness = totalBrightness / (data.length / 4);\n\n      // Determine quality based on brightness\n      if (averageBrightness < 50) {\n        setLightingQuality('poor');\n      } else if (averageBrightness < 100) {\n        setLightingQuality('fair');\n      } else if (averageBrightness < 200) {\n        setLightingQuality('good');\n      } else {\n        setLightingQuality('too_bright');\n      }\n    } catch (err) {\n      console.error('Error checking lighting:', err);\n    }\n  };\n\n  // Start/stop scanning\n  const toggleScanning = () => {\n    if (scanning) {\n      setScanning(false);\n      setScanProgress(0);\n    } else {\n      setScanning(true);\n      setShowInstructions(false);\n    }\n  };\n\n  // Handle scan completion\n  const handleScanComplete = () => {\n    setScanning(false);\n\n    // Generate mock scan results\n    const mockResults = {\n      pupillaryDistance: 63 + Math.random() * 5,\n      templeWidth: 137 + Math.random() * 10,\n      faceWidth: 145 + Math.random() * 15,\n      scanQuality: scanQuality,\n      timestamp: new Date().toISOString()\n    };\n\n    // Call the callback with results\n    if (onScanComplete) {\n      onScanComplete(mockResults);\n    }\n  };\n\n  // Toggle fullscreen\n  const toggleFullscreen = () => {\n    const container = document.getElementById('scanner-container');\n    if (!isFullscreen) {\n      if (container.requestFullscreen) {\n        container.requestFullscreen();\n      } else if (container.webkitRequestFullscreen) {\n        container.webkitRequestFullscreen();\n      } else if (container.msRequestFullscreen) {\n        container.msRequestFullscreen();\n      }\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      }\n    }\n    setIsFullscreen(!isFullscreen);\n  };\n\n  // Toggle camera facing mode\n  const toggleCamera = () => {\n    setFacingMode(facingMode === 'user' ? 'environment' : 'user');\n  };\n\n  // Handle zoom change\n  const handleZoomChange = (event, newValue) => {\n    setZoomLevel(newValue);\n\n    // Apply zoom to video element\n    if (videoRef.current) {\n      videoRef.current.style.transform = `scale(${newValue})`;\n    }\n  };\n\n  // Get instructions based on detection status\n  const getInstructions = () => {\n    switch (detectionStatus) {\n      case 'waiting':\n        return 'Position your face in the center of the frame';\n      case 'move_closer':\n        return 'Move closer to the camera';\n      case 'move_back':\n        return 'Move back from the camera';\n      case 'good':\n        return scanning ? 'Hold still while scanning...' : 'Face detected! Press Start Scan to continue';\n      default:\n        return 'Preparing scanner...';\n    }\n  };\n\n  // Get status tag color\n  const getStatusColor = () => {\n    switch (detectionStatus) {\n      case 'waiting':\n        return 'rgba(255, 150, 0, 0.8)';\n      case 'move_closer':\n      case 'move_back':\n        return 'rgba(255, 100, 0, 0.8)';\n      case 'good':\n        return 'rgba(0, 200, 0, 0.8)';\n      default:\n        return 'rgba(100, 100, 100, 0.8)';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: styles.container,\n    id: \"scanner-container\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: styles.videoContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        playsInline: true,\n        muted: true,\n        style: {\n          ...styles.video,\n          transform: `scale(${zoomLevel})`,\n          transition: 'transform 0.3s ease'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: styles.canvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        ref: threeContainerRef,\n        sx: styles.canvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ...styles.faceMaskContainer,\n          borderColor: maskFit === 'good' ? 'rgba(0, 255, 0, 0.7)' : maskFit === 'too_small' ? 'rgba(255, 150, 0, 0.7)' : 'rgba(255, 100, 0, 0.7)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          ...styles.statusBox,\n          backgroundColor: getStatusColor()\n        },\n        children: detectionStatus.replace('_', ' ').toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 9\n      }, this), (showInstructions || scanning) && /*#__PURE__*/_jsxDEV(Box, {\n        sx: styles.instructionText,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: getInstructions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 11\n      }, this), scanning && /*#__PURE__*/_jsxDEV(Box, {\n        sx: styles.progressContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: styles.progressLabel,\n          children: [\"Scanning: \", Math.round(scanProgress), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: scanProgress,\n          color: \"primary\",\n          sx: {\n            height: 8,\n            borderRadius: 4,\n            backgroundColor: 'rgba(255, 255, 255, 0.3)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 626,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: styles.zoomControls,\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Zoom in\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => handleZoomChange(null, Math.min(zoomLevel + 0.1, 2)),\n            sx: {\n              color: 'white'\n            },\n            children: /*#__PURE__*/_jsxDEV(ZoomInIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Zoom out\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => handleZoomChange(null, Math.max(zoomLevel - 0.1, 1)),\n            sx: {\n              color: 'white'\n            },\n            children: /*#__PURE__*/_jsxDEV(ZoomOutIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: styles.overlay,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: styles.topControls,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Settings\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                sx: {\n                  color: 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Toggle fullscreen\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: toggleFullscreen,\n                sx: {\n                  color: 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(FullscreenIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 678,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: \"Switch camera\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: toggleCamera,\n                sx: {\n                  color: 'white'\n                },\n                children: /*#__PURE__*/_jsxDEV(FlipCameraIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: styles.controls,\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: `Lighting: ${lightingQuality.replace('_', ' ')}`,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center'\n              },\n              children: /*#__PURE__*/_jsxDEV(BrightnessIcon, {\n                sx: {\n                  color: lightingQuality === 'good' ? 'lightgreen' : lightingQuality === 'fair' ? 'yellow' : 'orange',\n                  mr: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: scanning ? \"error\" : \"primary\",\n            startIcon: scanning ? /*#__PURE__*/_jsxDEV(ResetIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(CameraIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 53\n            }, this),\n            onClick: toggleScanning,\n            disabled: !cameraReady,\n            sx: {\n              borderRadius: 28,\n              px: 3,\n              py: 1.5\n            },\n            children: scanning ? 'Cancel' : 'Start Scan'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              variant: \"determinate\",\n              value: faceDetected ? 100 : 0,\n              size: 24,\n              thickness: 5,\n              sx: {\n                color: faceDetected ? 'lightgreen' : 'grey',\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 7\n    }, this), lightingQuality === 'poor' && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mt: 2\n      },\n      children: \"The lighting is too dim for optimal face scanning. Please move to a better lit area.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 9\n    }, this), lightingQuality === 'too_bright' && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mt: 2\n      },\n      children: \"The lighting is too bright. Please avoid direct light on your face for better results.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 561,\n    columnNumber: 5\n  }, this);\n};\n_s(FaceScanner3D, \"HIdSEOh1dvQkPGfEXYWpVAxjoyI=\");\n_c = FaceScanner3D;\nexport default FaceScanner3D;\nvar _c;\n$RefreshReg$(_c, \"FaceScanner3D\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Typography","Button","CircularProgress","Slider","Tooltip","LinearProgress","Alert","IconButton","CameraAlt","CameraIcon","Replay","ResetIcon","Check","ConfirmIcon","Fullscreen","FullscreenIcon","FlipCameraIos","FlipCameraIcon","Settings","SettingsIcon","ZoomIn","ZoomInIcon","ZoomOut","ZoomOutIcon","BrightnessHigh","BrightnessIcon","THREE","GLTFLoader","OrbitControls","jsxDEV","_jsxDEV","styles","container","position","borderRadius","overflow","boxShadow","videoContainer","height","backgroundColor","video","width","objectFit","canvas","top","left","pointerEvents","overlay","display","flexDirection","justifyContent","padding","zIndex","controls","alignItems","marginTop","topControls","faceMaskContainer","transform","border","progressContainer","bottom","textAlign","progressLabel","color","textShadow","marginBottom","zoomControls","right","instructionText","maxWidth","margin","statusBox","fontSize","FaceScanner3D","onScanComplete","_s","videoRef","canvasRef","canvasCtxRef","threeContainerRef","sceneRef","cameraRef","rendererRef","frameId","cameraReady","setCameraReady","scanning","setScanning","scanProgress","setScanProgress","faceDetected","setFaceDetected","scanQuality","setScanQuality","lightingQuality","setLightingQuality","zoomLevel","setZoomLevel","facingMode","setFacingMode","isFullscreen","setIsFullscreen","showInstructions","setShowInstructions","maskFit","setMaskFit","detectionStatus","setDetectionStatus","SCAN_DURATION","SCAN_DELAY","setupCamera","constraints","ideal","stream","navigator","mediaDevices","getUserMedia","current","srcObject","onloadedmetadata","videoWidth","videoHeight","getContext","checkLightingQuality","err","console","error","alert","tracks","getTracks","forEach","track","stop","cancelAnimationFrame","dispose","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","z","renderer","WebGLRenderer","alpha","setSize","appendChild","domElement","ambientLight","AmbientLight","add","pointLight","PointLight","set","loader","load","gltf","model","scale","visible","traverse","child","isMesh","wireframe","WireframeGeometry","geometry","line","LineSegments","material","linewidth","xhr","log","loaded","total","animate","requestAnimationFrame","render","handleResize","aspect","updateProjectionMatrix","window","addEventListener","removeEventListener","removeChild","detectionInterval","setInterval","isDetected","Math","random","quality","fitValue","clearInterval","scanTimer","progressInterval","setTimeout","startTime","Date","now","elapsed","progress","min","handleScanComplete","clearTimeout","drawImage","imageData","getImageData","data","totalBrightness","i","length","brightness","averageBrightness","toggleScanning","mockResults","pupillaryDistance","templeWidth","faceWidth","timestamp","toISOString","toggleFullscreen","document","getElementById","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","msExitFullscreen","toggleCamera","handleZoomChange","event","newValue","style","getInstructions","getStatusColor","sx","id","children","ref","autoPlay","playsInline","muted","transition","fileName","_jsxFileName","lineNumber","columnNumber","borderColor","replace","toUpperCase","variant","round","value","title","onClick","max","mr","startIcon","disabled","px","py","size","thickness","severity","mt","_c","$RefreshReg$"],"sources":["/Users/saban/Desktop/New VisionAi 2.0/NewVisionAI/web/src/components/FaceScanner/FaceScanner3D.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { \n  Box, \n  Typography, \n  Button, \n  CircularProgress, \n  Slider, \n  Tooltip, \n  LinearProgress,\n  Alert,\n  IconButton\n} from '@mui/material';\nimport {\n  CameraAlt as CameraIcon,\n  Replay as ResetIcon,\n  Check as ConfirmIcon,\n  Fullscreen as FullscreenIcon,\n  FlipCameraIos as FlipCameraIcon,\n  Settings as SettingsIcon,\n  ZoomIn as ZoomInIcon,\n  ZoomOut as ZoomOutIcon,\n  BrightnessHigh as BrightnessIcon\n} from '@mui/icons-material';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\n// Styles\nconst styles = {\n  container: {\n    position: 'relative',\n    borderRadius: '16px',\n    overflow: 'hidden',\n    boxShadow: '0 4px 12px rgba(0,0,0,0.1)'\n  },\n  videoContainer: {\n    position: 'relative', \n    height: 500,\n    backgroundColor: '#000',\n    borderRadius: '16px',\n    overflow: 'hidden'\n  },\n  video: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover'\n  },\n  canvas: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    pointerEvents: 'none'\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    padding: '16px',\n    zIndex: 10\n  },\n  controls: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginTop: 'auto'\n  },\n  topControls: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%'\n  },\n  faceMaskContainer: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: '75%',\n    height: '75%',\n    borderRadius: '50%',\n    border: '2px dashed rgba(255, 255, 255, 0.6)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    pointerEvents: 'none'\n  },\n  progressContainer: {\n    position: 'absolute',\n    bottom: '80px',\n    left: '50%',\n    transform: 'translateX(-50%)',\n    width: '90%',\n    textAlign: 'center'\n  },\n  progressLabel: {\n    color: 'white',\n    textShadow: '0 0 5px rgba(0,0,0,0.7)',\n    marginBottom: '4px'\n  },\n  zoomControls: {\n    position: 'absolute',\n    right: '16px',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    borderRadius: '24px',\n    padding: '8px 0'\n  },\n  instructionText: {\n    color: 'white',\n    textShadow: '0 0 5px rgba(0,0,0,0.7)',\n    textAlign: 'center',\n    marginBottom: '16px',\n    maxWidth: '80%',\n    margin: '0 auto'\n  },\n  statusBox: {\n    position: 'absolute',\n    top: '16px',\n    left: '16px',\n    padding: '4px 8px',\n    backgroundColor: 'rgba(0,0,0,0.6)',\n    color: 'white',\n    borderRadius: '4px',\n    fontSize: '12px'\n  }\n};\n\n/**\n * 3D Face Scanner component that uses camera and AR techniques\n * to measure facial features and analyze face shape\n */\nconst FaceScanner3D = ({ onScanComplete }) => {\n  // Refs\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const canvasCtxRef = useRef(null);\n  const threeContainerRef = useRef(null);\n  const sceneRef = useRef(null);\n  const cameraRef = useRef(null);\n  const rendererRef = useRef(null);\n  const frameId = useRef(null);\n  \n  // State\n  const [cameraReady, setCameraReady] = useState(false);\n  const [scanning, setScanning] = useState(false);\n  const [scanProgress, setScanProgress] = useState(0);\n  const [faceDetected, setFaceDetected] = useState(false);\n  const [scanQuality, setScanQuality] = useState(0);\n  const [lightingQuality, setLightingQuality] = useState('unknown');\n  const [zoomLevel, setZoomLevel] = useState(1);\n  const [facingMode, setFacingMode] = useState('user');\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [showInstructions, setShowInstructions] = useState(true);\n  const [maskFit, setMaskFit] = useState('too_small'); // 'too_small', 'good', 'too_large'\n  const [detectionStatus, setDetectionStatus] = useState('waiting');\n  \n  // Constants for face detection\n  const SCAN_DURATION = 10000; // 10 seconds\n  const SCAN_DELAY = 500; // Short delay before starting scan\n  \n  // Initialize camera and canvas\n  useEffect(() => {\n    const setupCamera = async () => {\n      try {\n        // Get camera stream\n        const constraints = {\n          video: {\n            width: { ideal: 1280 },\n            height: { ideal: 720 },\n            facingMode: facingMode\n          }\n        };\n        \n        const stream = await navigator.mediaDevices.getUserMedia(constraints);\n        \n        // Set video source\n        if (videoRef.current) {\n          videoRef.current.srcObject = stream;\n          \n          // Once video is ready, set up canvas\n          videoRef.current.onloadedmetadata = () => {\n            if (canvasRef.current) {\n              canvasRef.current.width = videoRef.current.videoWidth;\n              canvasRef.current.height = videoRef.current.videoHeight;\n              \n              // Setup canvas context\n              canvasCtxRef.current = canvasRef.current.getContext('2d');\n              \n              // Initialize lighting quality check\n              checkLightingQuality();\n              \n              setCameraReady(true);\n            }\n          };\n        }\n      } catch (err) {\n        console.error('Error accessing camera:', err);\n        alert('Camera access is required for face scanning. Please allow camera access and try again.');\n      }\n    };\n    \n    setupCamera();\n    \n    // Cleanup function to stop camera when component unmounts\n    return () => {\n      if (videoRef.current && videoRef.current.srcObject) {\n        const tracks = videoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      \n      // Stop animation frame\n      if (frameId.current) {\n        cancelAnimationFrame(frameId.current);\n      }\n      \n      // Dispose Three.js resources\n      if (rendererRef.current) {\n        rendererRef.current.dispose();\n      }\n    };\n  }, [facingMode]);\n  \n  // Initialize Three.js scene\n  useEffect(() => {\n    if (cameraReady && threeContainerRef.current) {\n      // Create scene\n      const scene = new THREE.Scene();\n      sceneRef.current = scene;\n      \n      // Create camera\n      const camera = new THREE.PerspectiveCamera(\n        75, \n        threeContainerRef.current.clientWidth / threeContainerRef.current.clientHeight, \n        0.1, \n        1000\n      );\n      camera.position.z = 5;\n      cameraRef.current = camera;\n      \n      // Create renderer\n      const renderer = new THREE.WebGLRenderer({ alpha: true });\n      renderer.setSize(\n        threeContainerRef.current.clientWidth, \n        threeContainerRef.current.clientHeight\n      );\n      threeContainerRef.current.appendChild(renderer.domElement);\n      rendererRef.current = renderer;\n      \n      // Add some light\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n      scene.add(ambientLight);\n      \n      const pointLight = new THREE.PointLight(0xffffff, 1);\n      pointLight.position.set(5, 5, 5);\n      scene.add(pointLight);\n      \n      // Load face mesh model\n      const loader = new GLTFLoader();\n      loader.load(\n        // Replace with actual face mesh model URL\n        'https://threejs.org/examples/models/gltf/LeePerrySmith/LeePerrySmith.glb',\n        (gltf) => {\n          // Scale and position the model\n          const model = gltf.scene;\n          model.scale.set(2, 2, 2);\n          model.position.set(0, 0, 0);\n          model.visible = false; // Hide initially\n          scene.add(model);\n          \n          // Add wireframe material\n          model.traverse((child) => {\n            if (child.isMesh) {\n              const wireframe = new THREE.WireframeGeometry(child.geometry);\n              const line = new THREE.LineSegments(wireframe);\n              line.material.color.set(0x00ff00);\n              line.material.linewidth = 1;\n              line.visible = false;\n              scene.add(line);\n            }\n          });\n        },\n        (xhr) => {\n          console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n        },\n        (error) => {\n          console.error('Error loading model:', error);\n        }\n      );\n      \n      // Animation function\n      const animate = () => {\n        frameId.current = requestAnimationFrame(animate);\n        \n        // You would update the face tracking and mesh here\n        // in a real implementation\n        \n        renderer.render(scene, camera);\n      };\n      \n      // Start animation\n      animate();\n      \n      // Resize handler\n      const handleResize = () => {\n        if (threeContainerRef.current) {\n          const width = threeContainerRef.current.clientWidth;\n          const height = threeContainerRef.current.clientHeight;\n          \n          camera.aspect = width / height;\n          camera.updateProjectionMatrix();\n          \n          renderer.setSize(width, height);\n        }\n      };\n      \n      window.addEventListener('resize', handleResize);\n      \n      // Clean up\n      return () => {\n        window.removeEventListener('resize', handleResize);\n        \n        if (threeContainerRef.current && renderer.domElement) {\n          threeContainerRef.current.removeChild(renderer.domElement);\n        }\n      };\n    }\n  }, [cameraReady]);\n  \n  // Mock face detection (in a real app, use a face-api.js or TensorFlow.js)\n  useEffect(() => {\n    let detectionInterval;\n    \n    // Simulated face detection for the demo\n    if (cameraReady && !scanning) {\n      detectionInterval = setInterval(() => {\n        // Simulate random detection\n        const isDetected = Math.random() > 0.3; // 70% chance of detection\n        setFaceDetected(isDetected);\n        \n        // Set quality based on face detection\n        const quality = isDetected ? Math.random() * 100 : 0;\n        setScanQuality(quality);\n        \n        // Update mask fit\n        if (isDetected) {\n          const fitValue = Math.random();\n          if (fitValue < 0.2) {\n            setMaskFit('too_small');\n            setDetectionStatus('move_closer');\n          } else if (fitValue > 0.8) {\n            setMaskFit('too_large');\n            setDetectionStatus('move_back');\n          } else {\n            setMaskFit('good');\n            setDetectionStatus('good');\n          }\n        } else {\n          setDetectionStatus('waiting');\n        }\n      }, 500);\n    }\n    \n    return () => {\n      if (detectionInterval) {\n        clearInterval(detectionInterval);\n      }\n    };\n  }, [cameraReady, scanning]);\n  \n  // Handle scanning process\n  useEffect(() => {\n    let scanTimer;\n    let progressInterval;\n    \n    if (scanning) {\n      // Small delay before starting scan\n      scanTimer = setTimeout(() => {\n        // Start progress timer\n        const startTime = Date.now();\n        \n        progressInterval = setInterval(() => {\n          const elapsed = Date.now() - startTime;\n          const progress = Math.min((elapsed / SCAN_DURATION) * 100, 100);\n          \n          setScanProgress(progress);\n          \n          if (progress >= 100) {\n            // Scan complete\n            clearInterval(progressInterval);\n            handleScanComplete();\n          }\n        }, 100);\n      }, SCAN_DELAY);\n    }\n    \n    return () => {\n      clearTimeout(scanTimer);\n      clearInterval(progressInterval);\n    };\n  }, [scanning]);\n  \n  // Check lighting quality\n  const checkLightingQuality = () => {\n    if (!videoRef.current || !canvasRef.current || !canvasCtxRef.current) return;\n    \n    try {\n      // Draw video frame to canvas\n      canvasCtxRef.current.drawImage(\n        videoRef.current,\n        0, 0,\n        canvasRef.current.width, canvasRef.current.height\n      );\n      \n      // Get pixel data\n      const imageData = canvasCtxRef.current.getImageData(\n        0, 0,\n        canvasRef.current.width, canvasRef.current.height\n      );\n      const data = imageData.data;\n      \n      // Calculate average brightness\n      let totalBrightness = 0;\n      for (let i = 0; i < data.length; i += 4) {\n        // Convert RGB to brightness (simple average)\n        const brightness = (data[i] + data[i+1] + data[i+2]) / 3;\n        totalBrightness += brightness;\n      }\n      \n      const averageBrightness = totalBrightness / (data.length / 4);\n      \n      // Determine quality based on brightness\n      if (averageBrightness < 50) {\n        setLightingQuality('poor');\n      } else if (averageBrightness < 100) {\n        setLightingQuality('fair');\n      } else if (averageBrightness < 200) {\n        setLightingQuality('good');\n      } else {\n        setLightingQuality('too_bright');\n      }\n    } catch (err) {\n      console.error('Error checking lighting:', err);\n    }\n  };\n  \n  // Start/stop scanning\n  const toggleScanning = () => {\n    if (scanning) {\n      setScanning(false);\n      setScanProgress(0);\n    } else {\n      setScanning(true);\n      setShowInstructions(false);\n    }\n  };\n  \n  // Handle scan completion\n  const handleScanComplete = () => {\n    setScanning(false);\n    \n    // Generate mock scan results\n    const mockResults = {\n      pupillaryDistance: 63 + Math.random() * 5,\n      templeWidth: 137 + Math.random() * 10,\n      faceWidth: 145 + Math.random() * 15,\n      scanQuality: scanQuality,\n      timestamp: new Date().toISOString()\n    };\n    \n    // Call the callback with results\n    if (onScanComplete) {\n      onScanComplete(mockResults);\n    }\n  };\n  \n  // Toggle fullscreen\n  const toggleFullscreen = () => {\n    const container = document.getElementById('scanner-container');\n    \n    if (!isFullscreen) {\n      if (container.requestFullscreen) {\n        container.requestFullscreen();\n      } else if (container.webkitRequestFullscreen) {\n        container.webkitRequestFullscreen();\n      } else if (container.msRequestFullscreen) {\n        container.msRequestFullscreen();\n      }\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      }\n    }\n    \n    setIsFullscreen(!isFullscreen);\n  };\n  \n  // Toggle camera facing mode\n  const toggleCamera = () => {\n    setFacingMode(facingMode === 'user' ? 'environment' : 'user');\n  };\n  \n  // Handle zoom change\n  const handleZoomChange = (event, newValue) => {\n    setZoomLevel(newValue);\n    \n    // Apply zoom to video element\n    if (videoRef.current) {\n      videoRef.current.style.transform = `scale(${newValue})`;\n    }\n  };\n  \n  // Get instructions based on detection status\n  const getInstructions = () => {\n    switch (detectionStatus) {\n      case 'waiting':\n        return 'Position your face in the center of the frame';\n      case 'move_closer':\n        return 'Move closer to the camera';\n      case 'move_back':\n        return 'Move back from the camera';\n      case 'good':\n        return scanning \n          ? 'Hold still while scanning...' \n          : 'Face detected! Press Start Scan to continue';\n      default:\n        return 'Preparing scanner...';\n    }\n  };\n  \n  // Get status tag color\n  const getStatusColor = () => {\n    switch (detectionStatus) {\n      case 'waiting':\n        return 'rgba(255, 150, 0, 0.8)';\n      case 'move_closer':\n      case 'move_back':\n        return 'rgba(255, 100, 0, 0.8)';\n      case 'good':\n        return 'rgba(0, 200, 0, 0.8)';\n      default:\n        return 'rgba(100, 100, 100, 0.8)';\n    }\n  };\n  \n  return (\n    <Box sx={styles.container} id=\"scanner-container\">\n      {/* Video and overlay container */}\n      <Box sx={styles.videoContainer}>\n        {/* Video element */}\n        <video \n          ref={videoRef}\n          autoPlay\n          playsInline\n          muted\n          style={{\n            ...styles.video,\n            transform: `scale(${zoomLevel})`,\n            transition: 'transform 0.3s ease'\n          }}\n        />\n        \n        {/* Canvas for drawing */}\n        <canvas \n          ref={canvasRef}\n          style={styles.canvas}\n        />\n        \n        {/* Three.js container */}\n        <Box \n          ref={threeContainerRef}\n          sx={styles.canvas}\n        />\n        \n        {/* Face mask overlay */}\n        <Box \n          sx={{\n            ...styles.faceMaskContainer,\n            borderColor: maskFit === 'good' \n              ? 'rgba(0, 255, 0, 0.7)' \n              : maskFit === 'too_small'\n                ? 'rgba(255, 150, 0, 0.7)'\n                : 'rgba(255, 100, 0, 0.7)'\n          }}\n        />\n        \n        {/* Status indicator */}\n        <Box \n          sx={{\n            ...styles.statusBox,\n            backgroundColor: getStatusColor()\n          }}\n        >\n          {detectionStatus.replace('_', ' ').toUpperCase()}\n        </Box>\n        \n        {/* Instructions */}\n        {(showInstructions || scanning) && (\n          <Box sx={styles.instructionText}>\n            <Typography variant=\"body1\">\n              {getInstructions()}\n            </Typography>\n          </Box>\n        )}\n        \n        {/* Progress bar during scanning */}\n        {scanning && (\n          <Box sx={styles.progressContainer}>\n            <Typography variant=\"body2\" sx={styles.progressLabel}>\n              Scanning: {Math.round(scanProgress)}%\n            </Typography>\n            <LinearProgress \n              variant=\"determinate\" \n              value={scanProgress} \n              color=\"primary\"\n              sx={{\n                height: 8,\n                borderRadius: 4,\n                backgroundColor: 'rgba(255, 255, 255, 0.3)'\n              }}\n            />\n          </Box>\n        )}\n        \n        {/* Zoom controls */}\n        <Box sx={styles.zoomControls}>\n          <Tooltip title=\"Zoom in\">\n            <IconButton \n              onClick={() => handleZoomChange(null, Math.min(zoomLevel + 0.1, 2))}\n              sx={{ color: 'white' }}\n            >\n              <ZoomInIcon />\n            </IconButton>\n          </Tooltip>\n          \n          <Tooltip title=\"Zoom out\">\n            <IconButton \n              onClick={() => handleZoomChange(null, Math.max(zoomLevel - 0.1, 1))}\n              sx={{ color: 'white' }}\n            >\n              <ZoomOutIcon />\n            </IconButton>\n          </Tooltip>\n        </Box>\n        \n        {/* Control overlay */}\n        <Box sx={styles.overlay}>\n          {/* Top controls */}\n          <Box sx={styles.topControls}>\n            <Box>\n              <Tooltip title=\"Settings\">\n                <IconButton sx={{ color: 'white' }}>\n                  <SettingsIcon />\n                </IconButton>\n              </Tooltip>\n            </Box>\n            \n            <Box>\n              <Tooltip title=\"Toggle fullscreen\">\n                <IconButton \n                  onClick={toggleFullscreen}\n                  sx={{ color: 'white' }}\n                >\n                  <FullscreenIcon />\n                </IconButton>\n              </Tooltip>\n              \n              <Tooltip title=\"Switch camera\">\n                <IconButton \n                  onClick={toggleCamera}\n                  sx={{ color: 'white' }}\n                >\n                  <FlipCameraIcon />\n                </IconButton>\n              </Tooltip>\n            </Box>\n          </Box>\n          \n          {/* Bottom controls */}\n          <Box sx={styles.controls}>\n            {/* Lighting indicator */}\n            <Tooltip title={`Lighting: ${lightingQuality.replace('_', ' ')}`}>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <BrightnessIcon sx={{ \n                  color: lightingQuality === 'good' \n                    ? 'lightgreen' \n                    : lightingQuality === 'fair' \n                      ? 'yellow' \n                      : 'orange',\n                  mr: 1\n                }} />\n              </Box>\n            </Tooltip>\n            \n            {/* Main action button */}\n            <Button\n              variant=\"contained\"\n              color={scanning ? \"error\" : \"primary\"}\n              startIcon={scanning ? <ResetIcon /> : <CameraIcon />}\n              onClick={toggleScanning}\n              disabled={!cameraReady}\n              sx={{ \n                borderRadius: 28,\n                px: 3,\n                py: 1.5\n              }}\n            >\n              {scanning ? 'Cancel' : 'Start Scan'}\n            </Button>\n            \n            {/* Face detection indicator */}\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n              <CircularProgress \n                variant=\"determinate\" \n                value={faceDetected ? 100 : 0} \n                size={24}\n                thickness={5}\n                sx={{ \n                  color: faceDetected ? 'lightgreen' : 'grey',\n                  mr: 1\n                }}\n              />\n            </Box>\n          </Box>\n        </Box>\n      </Box>\n      \n      {/* Warnings and alerts based on conditions */}\n      {lightingQuality === 'poor' && (\n        <Alert severity=\"warning\" sx={{ mt: 2 }}>\n          The lighting is too dim for optimal face scanning. Please move to a better lit area.\n        </Alert>\n      )}\n      \n      {lightingQuality === 'too_bright' && (\n        <Alert severity=\"warning\" sx={{ mt: 2 }}>\n          The lighting is too bright. Please avoid direct light on your face for better results.\n        </Alert>\n      )}\n    </Box>\n  );\n};\n\nexport default FaceScanner3D; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}