{"ast":null,"code":"var _jsxFileName = \"/Users/saban/Desktop/New VisionAi 2.0/NewVisionAI/web/src/components/FaceScanner/FaceScannerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Container, Typography, Stepper, Step, StepLabel, Button, Paper, Grid, Card, CardContent, useTheme, useMediaQuery, Divider } from '@mui/material';\nimport { ArrowBack as BackIcon, ArrowForward as NextIcon, Refresh as ResetIcon, Save as SaveIcon, VideoCameraFront as CameraIcon, SportsEsports as GameIcon } from '@mui/icons-material';\n\n// Import scanner components\nimport FaceScanner3D from './FaceScanner3D';\nimport GamifiedMeasurement from './GamifiedMeasurement';\nimport MeasurementResults from './MeasurementResults';\n\n/**\n * FaceScannerPage component\n * Main page for face scanning functionality with steps for different measurement techniques\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FaceScannerPage = ({\n  showNotification\n}) => {\n  _s();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n\n  // State\n  const [activeStep, setActiveStep] = useState(0);\n  const [scanMethod, setScanMethod] = useState(null);\n  const [measurementResults, setMeasurementResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [faceAnalysis, setFaceAnalysis] = useState(null);\n  const [savedToProfile, setSavedToProfile] = useState(false);\n\n  // Steps in the process\n  const steps = ['Choose Scan Method', 'Scan Your Face', 'View Results'];\n\n  // Handle next step\n  const handleNext = () => {\n    setActiveStep(prevStep => prevStep + 1);\n  };\n\n  // Handle back step\n  const handleBack = () => {\n    setActiveStep(prevStep => prevStep - 1);\n  };\n\n  // Handle reset to start\n  const handleReset = () => {\n    setActiveStep(0);\n    setScanMethod(null);\n    setMeasurementResults(null);\n    setSavedToProfile(false);\n    setFaceAnalysis(null);\n    showNotification && showNotification('Face scanner reset. Ready for a new scan.', 'info');\n  };\n\n  // Handle scan method selection\n  const handleSelectMethod = method => {\n    setScanMethod(method);\n    const methodName = method === '3d' ? '3D Scanner' : 'Measurement Game';\n    showNotification && showNotification(`Selected ${methodName} method. Let's get started!`, 'info');\n    handleNext();\n  };\n\n  // Handle completion of 3D scan\n  const handleScan3DComplete = results => {\n    setLoading(true);\n    showNotification && showNotification('Processing your face scan...', 'info');\n\n    // Simulate API call for analysis\n    setTimeout(() => {\n      setMeasurementResults(results);\n\n      // Sample face analysis results (in a real app, this would come from backend)\n      setFaceAnalysis({\n        faceShape: 'Oval',\n        faceSymmetry: 'Balanced',\n        skinTone: 'Medium',\n        recommendedStyles: ['Rectangle', 'Square', 'Aviator'],\n        recommendedColors: ['Black', 'Tortoise', 'Navy Blue', 'Gold']\n      });\n      setLoading(false);\n      showNotification && showNotification('Face scan complete! Viewing your personalized results.', 'success');\n      handleNext();\n    }, 1500);\n  };\n\n  // Handle completion of gamified measurement\n  const handleGameMeasurementComplete = results => {\n    setLoading(true);\n    showNotification && showNotification('Processing your measurements...', 'info');\n\n    // Simulate API call for analysis\n    setTimeout(() => {\n      setMeasurementResults(results);\n\n      // Sample face analysis results\n      setFaceAnalysis({\n        faceShape: 'Round',\n        faceSymmetry: 'Slightly Asymmetric',\n        skinTone: 'Warm',\n        recommendedStyles: ['Rectangle', 'Square', 'Geometric'],\n        recommendedColors: ['Tortoise', 'Brown', 'Gold', 'Green']\n      });\n      setLoading(false);\n      showNotification && showNotification('Measurements complete! Here are your personalized eyewear recommendations.', 'success');\n      handleNext();\n    }, 1500);\n  };\n\n  // Handle save measurements\n  const handleSaveMeasurements = () => {\n    setLoading(true);\n    showNotification && showNotification('Saving your measurements...', 'info');\n\n    // Simulate API call to save\n    setTimeout(() => {\n      setSavedToProfile(true);\n      setLoading(false);\n      showNotification && showNotification('Your measurements have been saved to your profile!', 'success');\n    }, 1000);\n  };\n\n  // Handle try frames\n  const handleTryFrames = () => {\n    // This would navigate to frames page with the measurements\n    showNotification && showNotification('Redirecting to eyewear catalog with your personalized recommendations...', 'info');\n  };\n\n  // Render step content\n  const getStepContent = step => {\n    switch (step) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            fontWeight: \"medium\",\n            children: \"Choose Your Measurement Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            paragraph: true,\n            color: \"text.secondary\",\n            children: \"Select how you'd like to measure your face for eyewear:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                elevation: 3,\n                sx: {\n                  height: '100%',\n                  cursor: 'pointer',\n                  transition: 'transform 0.2s',\n                  '&:hover': {\n                    transform: 'scale(1.02)',\n                    boxShadow: theme.shadows[6]\n                  }\n                },\n                onClick: () => handleSelectMethod('3d'),\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      textAlign: 'center',\n                      py: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(CameraIcon, {\n                      sx: {\n                        fontSize: 60,\n                        color: theme.palette.primary.main,\n                        mb: 2\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      gutterBottom: true,\n                      children: \"3D Face Scanner\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: \"Use our advanced 3D scanner for precise measurements with real-time feedback. Best for accurate frame fitting.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"primary\",\n                      sx: {\n                        mt: 3\n                      },\n                      startIcon: /*#__PURE__*/_jsxDEV(CameraIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 36\n                      }, this),\n                      children: \"Start 3D Scan\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                elevation: 3,\n                sx: {\n                  height: '100%',\n                  cursor: 'pointer',\n                  transition: 'transform 0.2s',\n                  '&:hover': {\n                    transform: 'scale(1.02)',\n                    boxShadow: theme.shadows[6]\n                  }\n                },\n                onClick: () => handleSelectMethod('game'),\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      textAlign: 'center',\n                      py: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(GameIcon, {\n                      sx: {\n                        fontSize: 60,\n                        color: theme.palette.secondary.main,\n                        mb: 2\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      gutterBottom: true,\n                      children: \"Measurement Game\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: \"Play an interactive game to take your measurements. Fun and accurate approach to find your perfect frames.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"contained\",\n                      color: \"secondary\",\n                      sx: {\n                        mt: 3\n                      },\n                      startIcon: /*#__PURE__*/_jsxDEV(GameIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 36\n                      }, this),\n                      children: \"Play Measurement Game\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4,\n              p: 2,\n              bgcolor: 'rgba(0, 0, 0, 0.03)',\n              borderRadius: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Both methods provide accurate measurements for finding the perfect frames. Your data is securely saved to your profile for future shopping.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this);\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 4\n          },\n          children: scanMethod === '3d' ? /*#__PURE__*/_jsxDEV(FaceScanner3D, {\n            onScanComplete: handleScan3DComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(GamifiedMeasurement, {\n            onMeasurementComplete: handleGameMeasurementComplete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(MeasurementResults, {\n            measurements: measurementResults,\n            faceAnalysis: faceAnalysis,\n            loading: loading,\n            onSave: handleSaveMeasurements,\n            onTryFrames: handleTryFrames\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), savedToProfile && /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 0,\n            sx: {\n              mt: 3,\n              p: 2,\n              bgcolor: theme.palette.success.light,\n              color: theme.palette.success.contrastText,\n              borderRadius: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              align: \"center\",\n              children: \"\\u2713 Measurements successfully saved to your profile!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this);\n      default:\n        return 'Unknown step';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        py: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        fontWeight: \"bold\",\n        children: \"Face Scanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        paragraph: true,\n        children: \"Get precise measurements for perfectly fitting eyewear. Follow the steps below to scan your face.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          my: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n        activeStep: activeStep,\n        alternativeLabel: !isMobile,\n        children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4,\n          mb: 4\n        },\n        children: getStepContent(activeStep)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          disabled: activeStep === 0,\n          onClick: handleBack,\n          startIcon: /*#__PURE__*/_jsxDEV(BackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 24\n          }, this),\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: activeStep === steps.length - 1 ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleReset,\n            startIcon: /*#__PURE__*/_jsxDEV(ResetIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 28\n            }, this),\n            children: \"Scan Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this) : activeStep === 0 && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleNext,\n            endIcon: /*#__PURE__*/_jsxDEV(NextIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 28\n            }, this),\n            disabled: activeStep === 1 || activeStep === 0 && !scanMethod,\n            children: activeStep === 0 ? 'Choose a Method' : 'Next'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n_s(FaceScannerPage, \"gh2TuTZczW0Fae5eqxnRM54PsTM=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = FaceScannerPage;\nexport default FaceScannerPage;\nvar _c;\n$RefreshReg$(_c, \"FaceScannerPage\");","map":{"version":3,"names":["React","useState","Box","Container","Typography","Stepper","Step","StepLabel","Button","Paper","Grid","Card","CardContent","useTheme","useMediaQuery","Divider","ArrowBack","BackIcon","ArrowForward","NextIcon","Refresh","ResetIcon","Save","SaveIcon","VideoCameraFront","CameraIcon","SportsEsports","GameIcon","FaceScanner3D","GamifiedMeasurement","MeasurementResults","jsxDEV","_jsxDEV","FaceScannerPage","showNotification","_s","theme","isMobile","breakpoints","down","activeStep","setActiveStep","scanMethod","setScanMethod","measurementResults","setMeasurementResults","loading","setLoading","faceAnalysis","setFaceAnalysis","savedToProfile","setSavedToProfile","steps","handleNext","prevStep","handleBack","handleReset","handleSelectMethod","method","methodName","handleScan3DComplete","results","setTimeout","faceShape","faceSymmetry","skinTone","recommendedStyles","recommendedColors","handleGameMeasurementComplete","handleSaveMeasurements","handleTryFrames","getStepContent","step","sx","mt","children","variant","gutterBottom","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","paragraph","color","container","spacing","item","xs","md","elevation","height","cursor","transition","transform","boxShadow","shadows","onClick","textAlign","py","fontSize","palette","primary","main","mb","startIcon","secondary","p","bgcolor","borderRadius","onScanComplete","onMeasurementComplete","measurements","onSave","onTryFrames","success","light","contrastText","align","maxWidth","component","my","alternativeLabel","map","label","display","justifyContent","disabled","length","endIcon","_c","$RefreshReg$"],"sources":["/Users/saban/Desktop/New VisionAi 2.0/NewVisionAI/web/src/components/FaceScanner/FaceScannerPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  Box, \n  Container,\n  Typography, \n  Stepper, \n  Step, \n  StepLabel, \n  Button, \n  Paper,\n  Grid,\n  Card,\n  CardContent,\n  useTheme,\n  useMediaQuery,\n  Divider\n} from '@mui/material';\nimport {\n  ArrowBack as BackIcon,\n  ArrowForward as NextIcon,\n  Refresh as ResetIcon,\n  Save as SaveIcon,\n  VideoCameraFront as CameraIcon,\n  SportsEsports as GameIcon\n} from '@mui/icons-material';\n\n// Import scanner components\nimport FaceScanner3D from './FaceScanner3D';\nimport GamifiedMeasurement from './GamifiedMeasurement';\nimport MeasurementResults from './MeasurementResults';\n\n/**\n * FaceScannerPage component\n * Main page for face scanning functionality with steps for different measurement techniques\n */\nconst FaceScannerPage = ({ showNotification }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n  \n  // State\n  const [activeStep, setActiveStep] = useState(0);\n  const [scanMethod, setScanMethod] = useState(null);\n  const [measurementResults, setMeasurementResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [faceAnalysis, setFaceAnalysis] = useState(null);\n  const [savedToProfile, setSavedToProfile] = useState(false);\n  \n  // Steps in the process\n  const steps = [\n    'Choose Scan Method', \n    'Scan Your Face', \n    'View Results'\n  ];\n  \n  // Handle next step\n  const handleNext = () => {\n    setActiveStep((prevStep) => prevStep + 1);\n  };\n  \n  // Handle back step\n  const handleBack = () => {\n    setActiveStep((prevStep) => prevStep - 1);\n  };\n  \n  // Handle reset to start\n  const handleReset = () => {\n    setActiveStep(0);\n    setScanMethod(null);\n    setMeasurementResults(null);\n    setSavedToProfile(false);\n    setFaceAnalysis(null);\n    showNotification && showNotification('Face scanner reset. Ready for a new scan.', 'info');\n  };\n  \n  // Handle scan method selection\n  const handleSelectMethod = (method) => {\n    setScanMethod(method);\n    const methodName = method === '3d' ? '3D Scanner' : 'Measurement Game';\n    showNotification && showNotification(`Selected ${methodName} method. Let's get started!`, 'info');\n    handleNext();\n  };\n  \n  // Handle completion of 3D scan\n  const handleScan3DComplete = (results) => {\n    setLoading(true);\n    showNotification && showNotification('Processing your face scan...', 'info');\n    \n    // Simulate API call for analysis\n    setTimeout(() => {\n      setMeasurementResults(results);\n      \n      // Sample face analysis results (in a real app, this would come from backend)\n      setFaceAnalysis({\n        faceShape: 'Oval',\n        faceSymmetry: 'Balanced',\n        skinTone: 'Medium',\n        recommendedStyles: ['Rectangle', 'Square', 'Aviator'],\n        recommendedColors: ['Black', 'Tortoise', 'Navy Blue', 'Gold']\n      });\n      \n      setLoading(false);\n      showNotification && showNotification('Face scan complete! Viewing your personalized results.', 'success');\n      handleNext();\n    }, 1500);\n  };\n  \n  // Handle completion of gamified measurement\n  const handleGameMeasurementComplete = (results) => {\n    setLoading(true);\n    showNotification && showNotification('Processing your measurements...', 'info');\n    \n    // Simulate API call for analysis\n    setTimeout(() => {\n      setMeasurementResults(results);\n      \n      // Sample face analysis results\n      setFaceAnalysis({\n        faceShape: 'Round',\n        faceSymmetry: 'Slightly Asymmetric',\n        skinTone: 'Warm',\n        recommendedStyles: ['Rectangle', 'Square', 'Geometric'],\n        recommendedColors: ['Tortoise', 'Brown', 'Gold', 'Green']\n      });\n      \n      setLoading(false);\n      showNotification && showNotification('Measurements complete! Here are your personalized eyewear recommendations.', 'success');\n      handleNext();\n    }, 1500);\n  };\n  \n  // Handle save measurements\n  const handleSaveMeasurements = () => {\n    setLoading(true);\n    showNotification && showNotification('Saving your measurements...', 'info');\n    \n    // Simulate API call to save\n    setTimeout(() => {\n      setSavedToProfile(true);\n      setLoading(false);\n      showNotification && showNotification('Your measurements have been saved to your profile!', 'success');\n    }, 1000);\n  };\n  \n  // Handle try frames\n  const handleTryFrames = () => {\n    // This would navigate to frames page with the measurements\n    showNotification && showNotification('Redirecting to eyewear catalog with your personalized recommendations...', 'info');\n  };\n  \n  // Render step content\n  const getStepContent = (step) => {\n    switch (step) {\n      case 0:\n        return (\n          <Box sx={{ mt: 4 }}>\n            <Typography variant=\"h5\" gutterBottom fontWeight=\"medium\">\n              Choose Your Measurement Method\n            </Typography>\n            \n            <Typography variant=\"body1\" paragraph color=\"text.secondary\">\n              Select how you'd like to measure your face for eyewear:\n            </Typography>\n            \n            <Grid container spacing={3} sx={{ mt: 2 }}>\n              <Grid item xs={12} md={6}>\n                <Card \n                  elevation={3} \n                  sx={{ \n                    height: '100%',\n                    cursor: 'pointer',\n                    transition: 'transform 0.2s',\n                    '&:hover': {\n                      transform: 'scale(1.02)',\n                      boxShadow: theme.shadows[6]\n                    }\n                  }}\n                  onClick={() => handleSelectMethod('3d')}\n                >\n                  <CardContent>\n                    <Box sx={{ textAlign: 'center', py: 2 }}>\n                      <CameraIcon sx={{ fontSize: 60, color: theme.palette.primary.main, mb: 2 }} />\n                      <Typography variant=\"h6\" gutterBottom>\n                        3D Face Scanner\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Use our advanced 3D scanner for precise measurements with real-time feedback.\n                        Best for accurate frame fitting.\n                      </Typography>\n                      \n                      <Button \n                        variant=\"contained\" \n                        color=\"primary\"\n                        sx={{ mt: 3 }}\n                        startIcon={<CameraIcon />}\n                      >\n                        Start 3D Scan\n                      </Button>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n              \n              <Grid item xs={12} md={6}>\n                <Card \n                  elevation={3} \n                  sx={{ \n                    height: '100%',\n                    cursor: 'pointer',\n                    transition: 'transform 0.2s',\n                    '&:hover': {\n                      transform: 'scale(1.02)',\n                      boxShadow: theme.shadows[6]\n                    }\n                  }}\n                  onClick={() => handleSelectMethod('game')}\n                >\n                  <CardContent>\n                    <Box sx={{ textAlign: 'center', py: 2 }}>\n                      <GameIcon sx={{ fontSize: 60, color: theme.palette.secondary.main, mb: 2 }} />\n                      <Typography variant=\"h6\" gutterBottom>\n                        Measurement Game\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Play an interactive game to take your measurements. Fun and accurate approach\n                        to find your perfect frames.\n                      </Typography>\n                      \n                      <Button \n                        variant=\"contained\" \n                        color=\"secondary\"\n                        sx={{ mt: 3 }}\n                        startIcon={<GameIcon />}\n                      >\n                        Play Measurement Game\n                      </Button>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n            \n            <Box sx={{ mt: 4, p: 2, bgcolor: 'rgba(0, 0, 0, 0.03)', borderRadius: 1 }}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Both methods provide accurate measurements for finding the perfect frames.\n                Your data is securely saved to your profile for future shopping.\n              </Typography>\n            </Box>\n          </Box>\n        );\n      \n      case 1:\n        return (\n          <Box sx={{ mt: 4 }}>\n            {scanMethod === '3d' ? (\n              <FaceScanner3D onScanComplete={handleScan3DComplete} />\n            ) : (\n              <GamifiedMeasurement onMeasurementComplete={handleGameMeasurementComplete} />\n            )}\n          </Box>\n        );\n      \n      case 2:\n        return (\n          <Box sx={{ mt: 4 }}>\n            <MeasurementResults \n              measurements={measurementResults}\n              faceAnalysis={faceAnalysis}\n              loading={loading}\n              onSave={handleSaveMeasurements}\n              onTryFrames={handleTryFrames}\n            />\n            \n            {savedToProfile && (\n              <Paper \n                elevation={0} \n                sx={{ \n                  mt: 3, \n                  p: 2, \n                  bgcolor: theme.palette.success.light,\n                  color: theme.palette.success.contrastText,\n                  borderRadius: 1\n                }}\n              >\n                <Typography variant=\"body1\" align=\"center\">\n                  ✓ Measurements successfully saved to your profile!\n                </Typography>\n              </Paper>\n            )}\n          </Box>\n        );\n      \n      default:\n        return 'Unknown step';\n    }\n  };\n  \n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ py: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom fontWeight=\"bold\">\n          Face Scanner\n        </Typography>\n        \n        <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n          Get precise measurements for perfectly fitting eyewear. Follow the steps below to scan your face.\n        </Typography>\n        \n        <Divider sx={{ my: 3 }} />\n        \n        {/* Stepper */}\n        <Stepper activeStep={activeStep} alternativeLabel={!isMobile}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        \n        {/* Step content */}\n        <Box sx={{ mt: 4, mb: 4 }}>\n          {getStepContent(activeStep)}\n        </Box>\n        \n        {/* Navigation buttons */}\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 4 }}>\n          <Button\n            variant=\"outlined\"\n            disabled={activeStep === 0}\n            onClick={handleBack}\n            startIcon={<BackIcon />}\n          >\n            Back\n          </Button>\n          \n          <Box>\n            {activeStep === steps.length - 1 ? (\n              <Button \n                variant=\"outlined\" \n                onClick={handleReset}\n                startIcon={<ResetIcon />}\n              >\n                Scan Again\n              </Button>\n            ) : (\n              activeStep === 0 && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleNext}\n                  endIcon={<NextIcon />}\n                  disabled={activeStep === 1 || (activeStep === 0 && !scanMethod)}\n                >\n                  {activeStep === 0 ? 'Choose a Method' : 'Next'}\n                </Button>\n              )\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default FaceScannerPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}