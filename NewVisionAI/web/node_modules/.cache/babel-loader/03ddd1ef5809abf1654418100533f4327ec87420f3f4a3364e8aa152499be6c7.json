{"ast":null,"code":"import React,{useState,useEffect,useRef,useMemo}from'react';import{Box,Typography,CircularProgress,Alert,Paper,Grid,Chip}from'@mui/material';import{Line}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend}from'chart.js';import{subscribeToEvent,unsubscribeFromEvent,emitEvent}from'../../services/socketService';// Register Chart.js components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,Title,Tooltip,Legend);const RealtimeFaceAnalysis=_ref=>{let{userId,measurementId}=_ref;const[status,setStatus]=useState('idle');const[measurements,setMeasurements]=useState(null);const[analysisResults,setAnalysisResults]=useState(null);const[confidenceHistory,setConfidenceHistory]=useState([]);const[error,setError]=useState(null);const processingTimerRef=useRef(null);// Use useMemo for chart data to prevent unnecessary re-renders\nconst chartData=useMemo(()=>({labels:confidenceHistory.map((_,index)=>`Update ${index+1}`),datasets:[{label:'Confidence Score',data:confidenceHistory,fill:false,backgroundColor:'rgba(75, 192, 192, 0.2)',borderColor:'rgba(75, 192, 192, 1)',tension:0.4}]}),[confidenceHistory]);// Use useMemo for chart options to prevent recalculation on every render\nconst chartOptions=useMemo(()=>{const minValue=confidenceHistory.length>0?Math.max(0,Math.min(...confidenceHistory)-0.1):0;return{responsive:true,plugins:{legend:{position:'top'},title:{display:true,text:'AI Confidence Score History'}},scales:{y:{beginAtZero:false,min:minValue,max:1.0}}};},[confidenceHistory]);// Handle processing updates from the server\nconst handleProcessingUpdate=useRef(data=>{setStatus(data.status);if(data.measurements){setMeasurements(data.measurements);}if(data.status==='processing_complete'){// Start analysis when processing is complete\nrequestAnalysis(data.measurement_id);}}).current;// Handle processing errors from the server\nconst handleProcessingError=useRef(data=>{setError(data.error);setStatus('error');}).current;// Handle analysis results from the server\nconst handleAnalysisResult=useRef(data=>{setAnalysisResults(data);setStatus('analysis_complete');// Add the confidence score to the history\nif(data.confidence){setConfidenceHistory(prev=>[...prev,data.confidence]);}}).current;// Request face analysis from the server\nconst requestAnalysis=useRef(measurementId=>{setStatus('analyzing');// Emit an event to request face analysis\nemitEvent('face_analysis_request',{measurement_id:measurementId,request_id:Date.now().toString(),user_id:userId});}).current;// Initialize event listeners when component mounts\nuseEffect(()=>{// Subscribe to socket events\nsubscribeToEvent('processing_update',handleProcessingUpdate);subscribeToEvent('processing_error',handleProcessingError);subscribeToEvent('face_analysis_result',handleAnalysisResult);// Request initial analysis if we have a measurement ID\nif(measurementId){requestAnalysis(measurementId);}// Start simulated real-time updates for demo purposes\nprocessingTimerRef.current=setInterval(()=>{if(status==='analyzing'){// Simulate receiving updated confidence scores\nconst newConfidence=0.7+Math.random()*0.3;// Random between 0.7 and 1.0\nsetConfidenceHistory(prev=>[...prev,newConfidence]);// Update the analysis results with the new confidence\nsetAnalysisResults(prev=>{if(prev){return{...prev,confidence_score:newConfidence};}return prev;});}},2000);// Cleanup function to unsubscribe from events\nreturn()=>{unsubscribeFromEvent('processing_update',handleProcessingUpdate);unsubscribeFromEvent('processing_error',handleProcessingError);unsubscribeFromEvent('face_analysis_result',handleAnalysisResult);if(processingTimerRef.current){clearInterval(processingTimerRef.current);}};},[handleProcessingUpdate,handleProcessingError,handleAnalysisResult,requestAnalysis,measurementId,status]);// Render based on current status\nconst renderContent=()=>{switch(status){case'idle':return/*#__PURE__*/_jsx(Box,{sx:{textAlign:'center',p:3},children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"Waiting for face scan data...\"})});case'processing_started':case'face_detected':case'measurements_extracted':return/*#__PURE__*/_jsxs(Box,{sx:{textAlign:'center',p:3},children:[/*#__PURE__*/_jsx(CircularProgress,{}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",sx:{mt:2},children:\"Processing your face scan...\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:status==='processing_started'?'Initializing analysis...':status==='face_detected'?'Face detected! Extracting measurements...':'Measurements extracted! Finalizing analysis...'})]});case'analyzing':return/*#__PURE__*/_jsxs(Box,{sx:{p:3},children:[/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center',mb:2},children:[/*#__PURE__*/_jsx(CircularProgress,{size:24,sx:{mr:2}}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:\"Analyzing your face measurements in real-time...\"})]}),analysisResults&&/*#__PURE__*/_jsxs(Paper,{elevation:2,sx:{p:2,mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Current Analysis Results\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Face Shape:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:analysisResults.face_shape})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Confidence Score:\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[(analysisResults.confidence_score*100).toFixed(1),\"%\"]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Recommended Styles:\"}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:1,mt:1},children:analysisResults.recommended_styles&&analysisResults.recommended_styles.map((style,index)=>/*#__PURE__*/_jsx(Chip,{label:style,color:\"primary\",variant:\"outlined\"},index))})]})]})]}),confidenceHistory.length>1&&/*#__PURE__*/_jsx(Box,{sx:{mt:3},children:/*#__PURE__*/_jsx(Line,{data:chartData,options:chartOptions})})]});case'analysis_complete':return/*#__PURE__*/_jsxs(Box,{sx:{p:3},children:[/*#__PURE__*/_jsx(Alert,{severity:\"success\",sx:{mb:3},children:\"Analysis complete! Here are your results.\"}),analysisResults&&/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{p:3,mb:3},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Final Analysis Results\"}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Face Shape:\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:analysisResults.face_shape})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,sm:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Confidence Score:\"}),/*#__PURE__*/_jsxs(Typography,{variant:\"body1\",children:[(analysisResults.confidence_score*100).toFixed(1),\"%\"]})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle2\",children:\"Recommended Styles:\"}),/*#__PURE__*/_jsx(Box,{sx:{display:'flex',flexWrap:'wrap',gap:1,mt:1},children:analysisResults.recommended_styles&&analysisResults.recommended_styles.map((style,index)=>/*#__PURE__*/_jsx(Chip,{label:style,color:\"primary\"},index))})]})]})]}),confidenceHistory.length>1&&/*#__PURE__*/_jsx(Box,{sx:{mt:3},children:/*#__PURE__*/_jsx(Line,{data:chartData,options:chartOptions})})]});case'error':return/*#__PURE__*/_jsx(Box,{sx:{p:3},children:/*#__PURE__*/_jsx(Alert,{severity:\"error\",children:error||'An error occurred during processing.'})});default:return/*#__PURE__*/_jsx(Box,{sx:{textAlign:'center',p:3},children:/*#__PURE__*/_jsx(Typography,{variant:\"body1\",children:status})});}};return/*#__PURE__*/_jsxs(Box,{sx:{bgcolor:'background.paper',borderRadius:2,overflow:'hidden',boxShadow:3},children:[/*#__PURE__*/_jsx(Box,{sx:{p:2,bgcolor:'primary.main',color:'primary.contrastText'},children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",children:\"Real-Time Face Analysis\"})}),renderContent()]});};export default RealtimeFaceAnalysis;","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","Box","Typography","CircularProgress","Alert","Paper","Grid","Chip","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","subscribeToEvent","unsubscribeFromEvent","emitEvent","jsx","_jsx","jsxs","_jsxs","register","RealtimeFaceAnalysis","_ref","userId","measurementId","status","setStatus","measurements","setMeasurements","analysisResults","setAnalysisResults","confidenceHistory","setConfidenceHistory","error","setError","processingTimerRef","chartData","labels","map","_","index","datasets","label","data","fill","backgroundColor","borderColor","tension","chartOptions","minValue","length","Math","max","min","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","handleProcessingUpdate","requestAnalysis","measurement_id","current","handleProcessingError","handleAnalysisResult","confidence","prev","request_id","Date","now","toString","user_id","setInterval","newConfidence","random","confidence_score","clearInterval","renderContent","sx","textAlign","p","children","variant","mt","color","alignItems","mb","size","mr","elevation","gutterBottom","container","spacing","item","xs","sm","face_shape","toFixed","flexWrap","gap","recommended_styles","style","options","severity","bgcolor","borderRadius","overflow","boxShadow"],"sources":["/Users/saban/Desktop/New VisionAi 2.0/NewVisionAI/web/src/components/FaceScanner/RealtimeFaceAnalysis.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { Box, Typography, CircularProgress, Alert, Paper, Grid, Chip } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { subscribeToEvent, unsubscribeFromEvent, emitEvent } from '../../services/socketService';\n\n// Register Chart.js components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst RealtimeFaceAnalysis = ({ userId, measurementId }) => {\n  const [status, setStatus] = useState('idle');\n  const [measurements, setMeasurements] = useState(null);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [confidenceHistory, setConfidenceHistory] = useState([]);\n  const [error, setError] = useState(null);\n  const processingTimerRef = useRef(null);\n  \n  // Use useMemo for chart data to prevent unnecessary re-renders\n  const chartData = useMemo(() => ({\n    labels: confidenceHistory.map((_, index) => `Update ${index + 1}`),\n    datasets: [\n      {\n        label: 'Confidence Score',\n        data: confidenceHistory,\n        fill: false,\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        tension: 0.4\n      }\n    ]\n  }), [confidenceHistory]);\n  \n  // Use useMemo for chart options to prevent recalculation on every render\n  const chartOptions = useMemo(() => {\n    const minValue = confidenceHistory.length > 0 \n      ? Math.max(0, Math.min(...confidenceHistory) - 0.1) \n      : 0;\n      \n    return {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top',\n        },\n        title: {\n          display: true,\n          text: 'AI Confidence Score History',\n        },\n      },\n      scales: {\n        y: {\n          beginAtZero: false,\n          min: minValue,\n          max: 1.0\n        }\n      }\n    };\n  }, [confidenceHistory]);\n  \n  // Handle processing updates from the server\n  const handleProcessingUpdate = useRef((data) => {\n    setStatus(data.status);\n    \n    if (data.measurements) {\n      setMeasurements(data.measurements);\n    }\n    \n    if (data.status === 'processing_complete') {\n      // Start analysis when processing is complete\n      requestAnalysis(data.measurement_id);\n    }\n  }).current;\n  \n  // Handle processing errors from the server\n  const handleProcessingError = useRef((data) => {\n    setError(data.error);\n    setStatus('error');\n  }).current;\n  \n  // Handle analysis results from the server\n  const handleAnalysisResult = useRef((data) => {\n    setAnalysisResults(data);\n    setStatus('analysis_complete');\n    \n    // Add the confidence score to the history\n    if (data.confidence) {\n      setConfidenceHistory(prev => [...prev, data.confidence]);\n    }\n  }).current;\n  \n  // Request face analysis from the server\n  const requestAnalysis = useRef((measurementId) => {\n    setStatus('analyzing');\n    \n    // Emit an event to request face analysis\n    emitEvent('face_analysis_request', {\n      measurement_id: measurementId,\n      request_id: Date.now().toString(),\n      user_id: userId\n    });\n  }).current;\n  \n  // Initialize event listeners when component mounts\n  useEffect(() => {\n    // Subscribe to socket events\n    subscribeToEvent('processing_update', handleProcessingUpdate);\n    subscribeToEvent('processing_error', handleProcessingError);\n    subscribeToEvent('face_analysis_result', handleAnalysisResult);\n    \n    // Request initial analysis if we have a measurement ID\n    if (measurementId) {\n      requestAnalysis(measurementId);\n    }\n    \n    // Start simulated real-time updates for demo purposes\n    processingTimerRef.current = setInterval(() => {\n      if (status === 'analyzing') {\n        // Simulate receiving updated confidence scores\n        const newConfidence = 0.7 + (Math.random() * 0.3); // Random between 0.7 and 1.0\n        setConfidenceHistory(prev => [...prev, newConfidence]);\n        \n        // Update the analysis results with the new confidence\n        setAnalysisResults(prev => {\n          if (prev) {\n            return {\n              ...prev,\n              confidence_score: newConfidence\n            };\n          }\n          return prev;\n        });\n      }\n    }, 2000);\n    \n    // Cleanup function to unsubscribe from events\n    return () => {\n      unsubscribeFromEvent('processing_update', handleProcessingUpdate);\n      unsubscribeFromEvent('processing_error', handleProcessingError);\n      unsubscribeFromEvent('face_analysis_result', handleAnalysisResult);\n      \n      if (processingTimerRef.current) {\n        clearInterval(processingTimerRef.current);\n      }\n    };\n  }, [handleProcessingUpdate, handleProcessingError, handleAnalysisResult, requestAnalysis, measurementId, status]);\n  \n  // Render based on current status\n  const renderContent = () => {\n    switch (status) {\n      case 'idle':\n        return (\n          <Box sx={{ textAlign: 'center', p: 3 }}>\n            <Typography variant=\"body1\">\n              Waiting for face scan data...\n            </Typography>\n          </Box>\n        );\n        \n      case 'processing_started':\n      case 'face_detected':\n      case 'measurements_extracted':\n        return (\n          <Box sx={{ textAlign: 'center', p: 3 }}>\n            <CircularProgress />\n            <Typography variant=\"body1\" sx={{ mt: 2 }}>\n              Processing your face scan...\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {status === 'processing_started' ? 'Initializing analysis...' : \n               status === 'face_detected' ? 'Face detected! Extracting measurements...' :\n               'Measurements extracted! Finalizing analysis...'}\n            </Typography>\n          </Box>\n        );\n        \n      case 'analyzing':\n        return (\n          <Box sx={{ p: 3 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n              <CircularProgress size={24} sx={{ mr: 2 }} />\n              <Typography variant=\"body1\">\n                Analyzing your face measurements in real-time...\n              </Typography>\n            </Box>\n            \n            {analysisResults && (\n              <Paper elevation={2} sx={{ p: 2, mb: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Current Analysis Results\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\">Face Shape:</Typography>\n                    <Typography variant=\"body1\">{analysisResults.face_shape}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\">Confidence Score:</Typography>\n                    <Typography variant=\"body1\">{(analysisResults.confidence_score * 100).toFixed(1)}%</Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant=\"subtitle2\">Recommended Styles:</Typography>\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n                      {analysisResults.recommended_styles && analysisResults.recommended_styles.map((style, index) => (\n                        <Chip key={index} label={style} color=\"primary\" variant=\"outlined\" />\n                      ))}\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Paper>\n            )}\n            \n            {confidenceHistory.length > 1 && (\n              <Box sx={{ mt: 3 }}>\n                <Line data={chartData} options={chartOptions} />\n              </Box>\n            )}\n          </Box>\n        );\n        \n      case 'analysis_complete':\n        return (\n          <Box sx={{ p: 3 }}>\n            <Alert severity=\"success\" sx={{ mb: 3 }}>\n              Analysis complete! Here are your results.\n            </Alert>\n            \n            {analysisResults && (\n              <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Final Analysis Results\n                </Typography>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\">Face Shape:</Typography>\n                    <Typography variant=\"body1\">{analysisResults.face_shape}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\">Confidence Score:</Typography>\n                    <Typography variant=\"body1\">{(analysisResults.confidence_score * 100).toFixed(1)}%</Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant=\"subtitle2\">Recommended Styles:</Typography>\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n                      {analysisResults.recommended_styles && analysisResults.recommended_styles.map((style, index) => (\n                        <Chip key={index} label={style} color=\"primary\" />\n                      ))}\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Paper>\n            )}\n            \n            {confidenceHistory.length > 1 && (\n              <Box sx={{ mt: 3 }}>\n                <Line data={chartData} options={chartOptions} />\n              </Box>\n            )}\n          </Box>\n        );\n        \n      case 'error':\n        return (\n          <Box sx={{ p: 3 }}>\n            <Alert severity=\"error\">\n              {error || 'An error occurred during processing.'}\n            </Alert>\n          </Box>\n        );\n        \n      default:\n        return (\n          <Box sx={{ textAlign: 'center', p: 3 }}>\n            <Typography variant=\"body1\">\n              {status}\n            </Typography>\n          </Box>\n        );\n    }\n  };\n  \n  return (\n    <Box sx={{ \n      bgcolor: 'background.paper', \n      borderRadius: 2,\n      overflow: 'hidden',\n      boxShadow: 3 \n    }}>\n      <Box sx={{ \n        p: 2, \n        bgcolor: 'primary.main', \n        color: 'primary.contrastText' \n      }}>\n        <Typography variant=\"h6\">\n          Real-Time Face Analysis\n        </Typography>\n      </Box>\n      \n      {renderContent()}\n    </Box>\n  );\n};\n\nexport default RealtimeFaceAnalysis; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}