{"ast":null,"code":"import{io}from'socket.io-client';import{getAuthToken}from'./authService';// Get API URL from environment or default to localhost\nconst API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000';// Create socket instance\nlet socket=null;let isInitializing=false;/**\n * Initialize and connect to the WebSocket server\n * @param {string} userId - The current user's ID\n * @returns {object} The socket instance\n */export const initializeSocket=userId=>{// Only initialize once\nif(socket)return socket;if(isInitializing)return null;isInitializing=true;try{// Make sure we have a userId and token\nif(!userId){console.warn('Cannot initialize socket: No user ID provided');isInitializing=false;return null;}const token=getAuthToken();if(!token){console.warn('Cannot initialize socket: No auth token available');isInitializing=false;return null;}// Connect to the socket.io server with authentication\nsocket=io(API_URL,{auth:{token:token},transports:['websocket','polling'],autoConnect:true,reconnection:true,reconnectionAttempts:5,reconnectionDelay:1000});// Set up connection event handlers\nsocket.on('connect',()=>{console.log('Socket connected');// Join the user's room for private messages\nsocket.emit('join',{user_id:userId});});socket.on('connect_error',error=>{console.error('Socket connection error:',error);});socket.on('disconnect',reason=>{console.log('Socket disconnected:',reason);});socket.on('error',error=>{console.error('Socket error:',error);});isInitializing=false;return socket;}catch(error){console.error('Error initializing socket:',error);isInitializing=false;return null;}};/**\n * Disconnect the socket\n */export const disconnectSocket=()=>{if(socket){try{socket.disconnect();}catch(error){console.error('Error disconnecting socket:',error);}finally{socket=null;}}};/**\n * Get the current socket instance\n * @returns {object|null} The socket instance or null if not initialized\n */export const getSocket=()=>socket;/**\n * Subscribe to a socket event\n * @param {string} event - The event name to subscribe to\n * @param {function} callback - The callback function to execute when the event is received\n */export const subscribeToEvent=(event,callback)=>{if(socket&&event&&typeof callback==='function'){socket.on(event,callback);}else{if(!socket){console.warn('Socket not initialized. Call initializeSocket first.');}}};/**\n * Unsubscribe from a socket event\n * @param {string} event - The event name to unsubscribe from\n * @param {function} callback - The callback function to remove\n */export const unsubscribeFromEvent=(event,callback)=>{if(socket&&event){if(callback&&typeof callback==='function'){socket.off(event,callback);}else{socket.off(event);}}};/**\n * Send an event to the server\n * @param {string} event - The event name to emit\n * @param {object} data - The data to send\n */export const emitEvent=(event,data)=>{if(socket&&event){try{socket.emit(event,data);}catch(error){console.error(`Error emitting event ${event}:`,error);}}else{if(!socket){console.warn('Socket not initialized. Call initializeSocket first.');}}};export default{initializeSocket,disconnectSocket,getSocket,subscribeToEvent,unsubscribeFromEvent,emitEvent};","map":{"version":3,"names":["io","getAuthToken","API_URL","process","env","REACT_APP_API_URL","socket","isInitializing","initializeSocket","userId","console","warn","token","auth","transports","autoConnect","reconnection","reconnectionAttempts","reconnectionDelay","on","log","emit","user_id","error","reason","disconnectSocket","disconnect","getSocket","subscribeToEvent","event","callback","unsubscribeFromEvent","off","emitEvent","data"],"sources":["/Users/saban/Desktop/New VisionAi 2.0/NewVisionAI/web/src/services/socketService.js"],"sourcesContent":["import { io } from 'socket.io-client';\nimport { getAuthToken } from './authService';\n\n// Get API URL from environment or default to localhost\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Create socket instance\nlet socket = null;\nlet isInitializing = false;\n\n/**\n * Initialize and connect to the WebSocket server\n * @param {string} userId - The current user's ID\n * @returns {object} The socket instance\n */\nexport const initializeSocket = (userId) => {\n  // Only initialize once\n  if (socket) return socket;\n  if (isInitializing) return null;\n  \n  isInitializing = true;\n  \n  try {\n    // Make sure we have a userId and token\n    if (!userId) {\n      console.warn('Cannot initialize socket: No user ID provided');\n      isInitializing = false;\n      return null;\n    }\n    \n    const token = getAuthToken();\n    if (!token) {\n      console.warn('Cannot initialize socket: No auth token available');\n      isInitializing = false;\n      return null;\n    }\n    \n    // Connect to the socket.io server with authentication\n    socket = io(API_URL, {\n      auth: {\n        token: token\n      },\n      transports: ['websocket', 'polling'],\n      autoConnect: true,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n\n    // Set up connection event handlers\n    socket.on('connect', () => {\n      console.log('Socket connected');\n      \n      // Join the user's room for private messages\n      socket.emit('join', { user_id: userId });\n    });\n\n    socket.on('connect_error', (error) => {\n      console.error('Socket connection error:', error);\n    });\n\n    socket.on('disconnect', (reason) => {\n      console.log('Socket disconnected:', reason);\n    });\n    \n    socket.on('error', (error) => {\n      console.error('Socket error:', error);\n    });\n    \n    isInitializing = false;\n    return socket;\n  } catch (error) {\n    console.error('Error initializing socket:', error);\n    isInitializing = false;\n    return null;\n  }\n};\n\n/**\n * Disconnect the socket\n */\nexport const disconnectSocket = () => {\n  if (socket) {\n    try {\n      socket.disconnect();\n    } catch (error) {\n      console.error('Error disconnecting socket:', error);\n    } finally {\n      socket = null;\n    }\n  }\n};\n\n/**\n * Get the current socket instance\n * @returns {object|null} The socket instance or null if not initialized\n */\nexport const getSocket = () => socket;\n\n/**\n * Subscribe to a socket event\n * @param {string} event - The event name to subscribe to\n * @param {function} callback - The callback function to execute when the event is received\n */\nexport const subscribeToEvent = (event, callback) => {\n  if (socket && event && typeof callback === 'function') {\n    socket.on(event, callback);\n  } else {\n    if (!socket) {\n      console.warn('Socket not initialized. Call initializeSocket first.');\n    }\n  }\n};\n\n/**\n * Unsubscribe from a socket event\n * @param {string} event - The event name to unsubscribe from\n * @param {function} callback - The callback function to remove\n */\nexport const unsubscribeFromEvent = (event, callback) => {\n  if (socket && event) {\n    if (callback && typeof callback === 'function') {\n      socket.off(event, callback);\n    } else {\n      socket.off(event);\n    }\n  }\n};\n\n/**\n * Send an event to the server\n * @param {string} event - The event name to emit\n * @param {object} data - The data to send\n */\nexport const emitEvent = (event, data) => {\n  if (socket && event) {\n    try {\n      socket.emit(event, data);\n    } catch (error) {\n      console.error(`Error emitting event ${event}:`, error);\n    }\n  } else {\n    if (!socket) {\n      console.warn('Socket not initialized. Call initializeSocket first.');\n    }\n  }\n};\n\nexport default {\n  initializeSocket,\n  disconnectSocket,\n  getSocket,\n  subscribeToEvent,\n  unsubscribeFromEvent,\n  emitEvent\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}