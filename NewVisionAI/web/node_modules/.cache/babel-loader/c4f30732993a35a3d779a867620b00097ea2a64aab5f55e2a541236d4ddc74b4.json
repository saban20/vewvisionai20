{"ast":null,"code":"var _jsxFileName = \"/Users/saban/Desktop/New VisionAi 2.0/NewVisionAI/web/src/index.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useMemo, useContext, useRef } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport { SocketProvider } from './context/SocketContext';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, Typography, Box, LinearProgress } from '@mui/material';\nimport CreditCardIcon from '@mui/icons-material/CreditCard';\n\n// Import TensorFlow.js and preload the AI models\nimport * as tf from '@tensorflow/tfjs';\n\n// Create context for theme mode (light/dark)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext({\n  themeMode: 'light',\n  setThemeMode: () => {}\n});\n\n// Create context for accessibility settings\nexport const AccessibilityContext = /*#__PURE__*/createContext({\n  voiceAssist: false,\n  setVoiceAssist: () => {},\n  reduceMotion: false,\n  setReduceMotion: () => {},\n  highContrast: false,\n  setHighContrast: () => {},\n  largeText: false,\n  setLargeText: () => {},\n  lineSpacing: 1,\n  setLineSpacing: () => {},\n  focusIndicator: 'default',\n  setFocusIndicator: () => {},\n  keyboardShortcuts: true,\n  setKeyboardShortcuts: () => {},\n  textSpacing: false,\n  setTextSpacing: () => {},\n  colorFilters: 'none',\n  setColorFilters: () => {}\n});\n\n// Context for AI functionality\nexport const AIContext = /*#__PURE__*/createContext(null);\n\n// Preload AI models when the app starts\nconst preloadAIModels = async () => {\n  try {\n    console.log('Preloading AI models...');\n\n    // Warm up TensorFlow.js\n    await tf.ready();\n    console.log('TensorFlow.js is ready');\n\n    // Return initialization status\n    return {\n      initialized: true,\n      error: null\n    };\n  } catch (error) {\n    console.error('Error preloading AI models:', error);\n    return {\n      initialized: false,\n      error: error.message\n    };\n  }\n};\n\n// Wrap App in AccessibilityProvider for context\nconst AccessibilityProvider = ({\n  children\n}) => {\n  _s();\n  // Initialize accessibility settings from localStorage\n  const [voiceAssist, setVoiceAssist] = useState(() => {\n    return localStorage.getItem('voiceAssist') === 'true';\n  });\n  const [reduceMotion, setReduceMotion] = useState(() => {\n    return localStorage.getItem('reduceMotion') === 'true';\n  });\n  const [highContrast, setHighContrast] = useState(() => {\n    return localStorage.getItem('highContrast') === 'true';\n  });\n  const [largeText, setLargeText] = useState(() => {\n    return localStorage.getItem('largeText') === 'true';\n  });\n  const [lineSpacing, setLineSpacing] = useState(() => {\n    const savedValue = localStorage.getItem('lineSpacing');\n    return savedValue ? parseFloat(savedValue) : 1;\n  });\n  const [focusIndicator, setFocusIndicator] = useState(() => {\n    return localStorage.getItem('focusIndicator') || 'default';\n  });\n  const [keyboardShortcuts, setKeyboardShortcuts] = useState(() => {\n    const savedValue = localStorage.getItem('keyboardShortcuts');\n    return savedValue === null ? true : savedValue === 'true';\n  });\n  const [textSpacing, setTextSpacing] = useState(() => {\n    return localStorage.getItem('textSpacing') === 'true';\n  });\n  const [colorFilters, setColorFilters] = useState(() => {\n    return localStorage.getItem('colorFilters') || 'none';\n  });\n\n  // AI state\n  const [aiStatus, setAiStatus] = useState({\n    initialized: false,\n    loading: true,\n    error: null\n  });\n\n  // Initialize AI models on component mount\n  useEffect(() => {\n    const initializeAI = async () => {\n      const status = await preloadAIModels();\n      setAiStatus({\n        initialized: status.initialized,\n        loading: false,\n        error: status.error\n      });\n    };\n    initializeAI();\n  }, []);\n\n  // Update localStorage when accessibility settings change\n  useEffect(() => {\n    localStorage.setItem('voiceAssist', voiceAssist);\n    localStorage.setItem('reduceMotion', reduceMotion);\n    localStorage.setItem('highContrast', highContrast);\n    localStorage.setItem('largeText', largeText);\n    localStorage.setItem('lineSpacing', lineSpacing);\n    localStorage.setItem('focusIndicator', focusIndicator);\n    localStorage.setItem('keyboardShortcuts', keyboardShortcuts);\n    localStorage.setItem('textSpacing', textSpacing);\n    localStorage.setItem('colorFilters', colorFilters);\n  }, [voiceAssist, reduceMotion, highContrast, largeText, lineSpacing, focusIndicator, keyboardShortcuts, textSpacing, colorFilters]);\n\n  // Create theme with light/dark mode and accessibility preferences\n  const theme = useMemo(() => {\n    const baseTheme = createTheme({\n      palette: {\n        mode: 'light',\n        ...(highContrast ? {\n          // Light mode colors\n          primary: {\n            main: '#0050A0'\n          },\n          secondary: {\n            main: '#D03060'\n          }\n        } : {\n          // Dark mode colors\n          primary: {\n            main: '#60A0FF'\n          },\n          secondary: {\n            main: '#FF6090'\n          }\n        })\n      },\n      typography: {\n        fontSize: largeText ? 16 : 14,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        h1: {\n          fontSize: largeText ? '2.8rem' : '2.5rem'\n        },\n        h2: {\n          fontSize: largeText ? '2.3rem' : '2rem'\n        },\n        h3: {\n          fontSize: largeText ? '2rem' : '1.75rem'\n        },\n        h4: {\n          fontSize: largeText ? '1.8rem' : '1.5rem'\n        },\n        h5: {\n          fontSize: largeText ? '1.5rem' : '1.25rem'\n        },\n        h6: {\n          fontSize: largeText ? '1.3rem' : '1.1rem'\n        },\n        body1: {\n          lineHeight: lineSpacing\n        },\n        body2: {\n          lineHeight: lineSpacing\n        }\n      },\n      components: {\n        MuiButton: {\n          styleOverrides: {\n            root: {\n              borderRadius: '8px',\n              ...(highContrast && {\n                borderWidth: '2px'\n              })\n            }\n          }\n        },\n        MuiFocusVisible: {\n          styleOverrides: {\n            root: {\n              outline: focusIndicator === 'high' ? '3px solid #F00 !important' : focusIndicator === 'enhanced' ? '2px solid #0076FF !important' : undefined\n            }\n          }\n        }\n      }\n    });\n    return baseTheme;\n  }, [highContrast, largeText, lineSpacing, focusIndicator]);\n  const contextValue = {\n    voiceAssist,\n    setVoiceAssist,\n    reduceMotion,\n    setReduceMotion,\n    highContrast,\n    setHighContrast,\n    largeText,\n    setLargeText,\n    lineSpacing,\n    setLineSpacing,\n    focusIndicator,\n    setFocusIndicator,\n    keyboardShortcuts,\n    setKeyboardShortcuts,\n    textSpacing,\n    setTextSpacing,\n    colorFilters,\n    setColorFilters\n  };\n  return /*#__PURE__*/_jsxDEV(AccessibilityContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AIContext.Provider, {\n        value: {\n          status: aiStatus,\n          setStatus: setAiStatus\n        },\n        children: /*#__PURE__*/_jsxDEV(SocketProvider, {\n          children: children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n\n// Enhanced calibration component\n_s(AccessibilityProvider, \"KNMC04Umph9HgNPjHjnYi3R/Yuo=\");\n_c = AccessibilityProvider;\nconst FaceCalibration = ({\n  isIOS,\n  onCalibrationComplete\n}) => {\n  _s2();\n  const [needsCalibration, setNeedsCalibration] = useState(!isIOS);\n  const [calibrationStep, setCalibrationStep] = useState(0);\n  const [calibrating, setCalibrating] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const videoRef = useRef(null);\n  const {\n    status,\n    setStatus\n  } = useContext(AIContext);\n\n  // Check if we have stored calibration data\n  useEffect(() => {\n    const savedCalibration = localStorage.getItem('faceCalibration');\n    if (savedCalibration && !isIOS) {\n      try {\n        const calibrationData = JSON.parse(savedCalibration);\n        if (calibrationData.timestamp > Date.now() - 30 * 24 * 60 * 60 * 1000) {\n          // Use calibration if less than 30 days old\n          setNeedsCalibration(false);\n          onCalibrationComplete(calibrationData.scaleFactor);\n        }\n      } catch (e) {\n        console.warn('Invalid calibration data, recalibrating');\n      }\n    }\n  }, [isIOS, onCalibrationComplete]);\n  const startCalibration = () => {\n    setDialogOpen(true);\n    setCalibrationStep(1);\n  };\n  const handleCalibration = async () => {\n    setCalibrating(true);\n\n    // Simulate calibration progress\n    const interval = setInterval(() => {\n      setProgress(prev => {\n        if (prev >= 100) {\n          clearInterval(interval);\n          return 100;\n        }\n        return prev + 5;\n      });\n    }, 200);\n    try {\n      // Capture face landmarks at fixed distance with reference object\n      await new Promise(resolve => setTimeout(resolve, 4000)); // Simulate processing\n\n      // Standard credit card width in mm\n      const creditCardWidth = 85.60;\n\n      // Calculate scale factor (this would use real measurements in production)\n      const scaleFactor = creditCardWidth / 0.15; // Simulated ratio\n\n      // Save calibration data\n      const calibrationData = {\n        scaleFactor,\n        timestamp: Date.now(),\n        deviceId: navigator.userAgent\n      };\n      localStorage.setItem('faceCalibration', JSON.stringify(calibrationData));\n\n      // Update AI context\n      setStatus(prev => ({\n        ...prev,\n        calibration: calibrationData\n      }));\n      setNeedsCalibration(false);\n      onCalibrationComplete(scaleFactor);\n\n      // Move to completion step\n      setCalibrationStep(3);\n    } catch (error) {\n      console.error('Calibration failed:', error);\n      setCalibrationStep(4); // Error step\n    } finally {\n      clearInterval(interval);\n      setCalibrating(false);\n      setProgress(100);\n    }\n  };\n  const closeDialog = () => {\n    setDialogOpen(false);\n    setCalibrationStep(0);\n    setProgress(0);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [needsCalibration && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      startIcon: /*#__PURE__*/_jsxDEV(CreditCardIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 22\n      }, this),\n      onClick: startCalibration,\n      sx: {\n        mt: 2\n      },\n      children: \"Calibrate Measurements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialogOpen,\n      onClose: calibrating ? undefined : closeDialog,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [calibrationStep === 1 && \"Measurement Calibration\", calibrationStep === 2 && \"Calibrating...\", calibrationStep === 3 && \"Calibration Complete\", calibrationStep === 4 && \"Calibration Failed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [calibrationStep === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            children: \"For accurate measurements, we need to calibrate the system.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            children: \"Please hold a credit card (or ID card) centered under your chin, about 6 inches from your face.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              my: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/calibration-guide.svg\",\n              alt: \"Hold card under chin\",\n              width: 240,\n              height: 180\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), calibrationStep === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            children: \"Keep the card steady and look straight ahead...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              my: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(LinearProgress, {\n              variant: \"determinate\",\n              value: progress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 15\n          }, this), videoRef.current && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              textAlign: 'center',\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              ref: videoRef,\n              style: {\n                width: '100%',\n                borderRadius: '8px'\n              },\n              autoPlay: true,\n              muted: true,\n              playsInline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), calibrationStep === 3 && /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"Calibration successful! Your measurements will now be accurate.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this), calibrationStep === 4 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            gutterBottom: true,\n            children: \"Calibration failed. Please try again in better lighting conditions.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: \"Make sure your face is clearly visible and the card edges are distinct.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [calibrationStep === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: closeDialog,\n            children: \"Skip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setCalibrationStep(2);\n              handleCalibration();\n            },\n            variant: \"contained\",\n            children: \"Start Calibration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), calibrationStep === 2 && /*#__PURE__*/_jsxDEV(Button, {\n          disabled: true,\n          children: \"Calibrating...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this), (calibrationStep === 3 || calibrationStep === 4) && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: closeDialog,\n          variant: \"contained\",\n          children: calibrationStep === 3 ? \"Done\" : \"Try Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(FaceCalibration, \"RXegye/r8Z4O9rXYcLEKg4CdsOU=\");\n_c2 = FaceCalibration;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AccessibilityProvider, {\n      children: /*#__PURE__*/_jsxDEV(SocketProvider, {\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 470,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 469,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// Register service worker for offline capabilities\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/sw.js').then(registration => {\n      console.log('ServiceWorker registered:', registration.scope);\n    }).catch(error => {\n      console.error('ServiceWorker registration failed:', error);\n    });\n  });\n}\nasync function loadResonanceModelAsync() {\n  try {\n    // Track loading progress for UI feedback\n    let loadProgress = 0;\n    if (onProgressUpdate) {\n      onProgressUpdate({\n        stage: 'model_init',\n        progress: loadProgress\n      });\n    }\n\n    // Model version - increment when architecture changes\n    const MODEL_VERSION = '1.0.0';\n    const MODEL_KEY = 'indexeddb://qifr-model-v' + MODEL_VERSION;\n\n    // Check if we have a saved model of the correct version\n    const savedModels = await tf.io.listModels();\n    if (savedModels[MODEL_KEY]) {\n      // Load existing model with progress tracking\n      resonanceModel = await tf.loadLayersModel(MODEL_KEY, {\n        onProgress: fraction => {\n          loadProgress = Math.floor(fraction * 100);\n          if (onProgressUpdate) {\n            onProgressUpdate({\n              stage: 'model_loading',\n              progress: loadProgress\n            });\n          }\n        }\n      });\n      console.log(`QIFR Model v${MODEL_VERSION} loaded from IndexedDB`);\n    } else {\n      // Create new model\n      console.log(`Creating new QIFR Model v${MODEL_VERSION}`);\n      if (onProgressUpdate) {\n        onProgressUpdate({\n          stage: 'model_creating',\n          progress: 30\n        });\n      }\n      resonanceModel = tf.sequential();\n      resonanceModel.add(tf.layers.dense({\n        units: 128,\n        inputShape: [474],\n        activation: 'relu',\n        kernelRegularizer: tf.regularizers.l2(0.001)\n      }));\n      resonanceModel.add(tf.layers.dropout({\n        rate: 0.25\n      }));\n      resonanceModel.add(tf.layers.dense({\n        units: 64,\n        activation: 'relu'\n      }));\n      resonanceModel.add(tf.layers.dense({\n        units: 8,\n        activation: 'sigmoid'\n      }));\n      resonanceModel.compile({\n        optimizer: 'adam',\n        loss: 'meanSquaredError',\n        metrics: ['accuracy']\n      });\n      if (onProgressUpdate) {\n        onProgressUpdate({\n          stage: 'model_saving',\n          progress: 70\n        });\n      }\n\n      // Save model for offline use\n      try {\n        await resonanceModel.save(MODEL_KEY);\n        console.log(`QIFR Model v${MODEL_VERSION} saved to IndexedDB`);\n      } catch (saveError) {\n        // Log error but continue - model will still work for this session\n        console.warn('Could not save model to IndexedDB:', saveError);\n      }\n    }\n\n    // Clean up old model versions\n    const modelKeys = Object.keys(savedModels);\n    const oldVersions = modelKeys.filter(key => key.startsWith('indexeddb://qifr-model-v') && key !== MODEL_KEY);\n    if (oldVersions.length > 0) {\n      console.log('Cleaning up old model versions');\n      for (const oldKey of oldVersions) {\n        try {\n          await tf.io.removeModel(oldKey);\n        } catch (e) {\n          console.warn(`Failed to remove old model ${oldKey}:`, e);\n        }\n      }\n    }\n    isModelLoaded = true;\n    if (onProgressUpdate) {\n      onProgressUpdate({\n        stage: 'model_ready',\n        progress: 100\n      });\n    }\n\n    // Warm up the model with a dummy prediction\n    warmUpModel();\n    return true;\n  } catch (error) {\n    console.error('Error loading QIFR model:', error);\n\n    // Attempt to create a simpler fallback model\n    try {\n      console.warn('Creating simplified fallback model');\n      resonanceModel = tf.sequential();\n      resonanceModel.add(tf.layers.dense({\n        units: 32,\n        inputShape: [474],\n        activation: 'relu'\n      }));\n      resonanceModel.add(tf.layers.dense({\n        units: 8,\n        activation: 'sigmoid'\n      }));\n      resonanceModel.compile({\n        optimizer: 'sgd',\n        loss: 'meanSquaredError'\n      });\n      isModelLoaded = true;\n      if (onProgressUpdate) {\n        onProgressUpdate({\n          stage: 'fallback_ready',\n          progress: 100\n        });\n      }\n      return true;\n    } catch (fallbackError) {\n      console.error('Even fallback model creation failed:', fallbackError);\n      isModelLoaded = false;\n      if (onProgressUpdate) {\n        onProgressUpdate({\n          stage: 'model_failed',\n          progress: 0,\n          error: error.message\n        });\n      }\n      return false;\n    }\n  }\n}\n\n// Pre-warm the model to avoid first inference delay\nfunction warmUpModel() {\n  try {\n    const dummyInput = tf.zeros([1, 474]);\n    const warmupResult = resonanceModel.predict(dummyInput);\n    warmupResult.dataSync(); // Force execution\n    tf.dispose([dummyInput, warmupResult]); // Clean up\n    console.log('Model warmed up');\n  } catch (e) {\n    console.warn('Model warmup failed:', e);\n  }\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"AccessibilityProvider\");\n$RefreshReg$(_c2, \"FaceCalibration\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useMemo","useContext","useRef","ReactDOM","BrowserRouter","ThemeProvider","createTheme","CssBaseline","App","reportWebVitals","SocketProvider","Button","Dialog","DialogTitle","DialogContent","DialogActions","Typography","Box","LinearProgress","CreditCardIcon","tf","jsxDEV","_jsxDEV","Fragment","_Fragment","ThemeContext","themeMode","setThemeMode","AccessibilityContext","voiceAssist","setVoiceAssist","reduceMotion","setReduceMotion","highContrast","setHighContrast","largeText","setLargeText","lineSpacing","setLineSpacing","focusIndicator","setFocusIndicator","keyboardShortcuts","setKeyboardShortcuts","textSpacing","setTextSpacing","colorFilters","setColorFilters","AIContext","preloadAIModels","console","log","ready","initialized","error","message","AccessibilityProvider","children","_s","localStorage","getItem","savedValue","parseFloat","aiStatus","setAiStatus","loading","initializeAI","status","setItem","theme","baseTheme","palette","mode","primary","main","secondary","typography","fontSize","fontFamily","h1","h2","h3","h4","h5","h6","body1","lineHeight","body2","components","MuiButton","styleOverrides","root","borderRadius","borderWidth","MuiFocusVisible","outline","undefined","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","setStatus","_c","FaceCalibration","isIOS","onCalibrationComplete","_s2","needsCalibration","setNeedsCalibration","calibrationStep","setCalibrationStep","calibrating","setCalibrating","progress","setProgress","dialogOpen","setDialogOpen","videoRef","savedCalibration","calibrationData","JSON","parse","timestamp","Date","now","scaleFactor","e","warn","startCalibration","handleCalibration","interval","setInterval","prev","clearInterval","Promise","resolve","setTimeout","creditCardWidth","deviceId","navigator","userAgent","stringify","calibration","closeDialog","variant","startIcon","onClick","sx","mt","open","onClose","gutterBottom","textAlign","my","src","alt","width","height","current","ref","style","autoPlay","muted","playsInline","color","disabled","_c2","createRoot","document","getElementById","render","StrictMode","window","addEventListener","serviceWorker","register","then","registration","scope","catch","loadResonanceModelAsync","loadProgress","onProgressUpdate","stage","MODEL_VERSION","MODEL_KEY","savedModels","io","listModels","resonanceModel","loadLayersModel","onProgress","fraction","Math","floor","sequential","add","layers","dense","units","inputShape","activation","kernelRegularizer","regularizers","l2","dropout","rate","compile","optimizer","loss","metrics","save","saveError","modelKeys","Object","keys","oldVersions","filter","key","startsWith","length","oldKey","removeModel","isModelLoaded","warmUpModel","fallbackError","dummyInput","zeros","warmupResult","predict","dataSync","dispose","$RefreshReg$"],"sources":["/Users/saban/Desktop/New VisionAi 2.0/NewVisionAI/web/src/index.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useMemo, useContext, useRef } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport { SocketProvider } from './context/SocketContext';\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions, Typography, Box, LinearProgress } from '@mui/material';\nimport CreditCardIcon from '@mui/icons-material/CreditCard';\n\n// Import TensorFlow.js and preload the AI models\nimport * as tf from '@tensorflow/tfjs';\n\n// Create context for theme mode (light/dark)\nexport const ThemeContext = createContext({\n  themeMode: 'light',\n  setThemeMode: () => {},\n});\n\n// Create context for accessibility settings\nexport const AccessibilityContext = createContext({\n  voiceAssist: false,\n  setVoiceAssist: () => {},\n  reduceMotion: false,\n  setReduceMotion: () => {},\n  highContrast: false,\n  setHighContrast: () => {},\n  largeText: false,\n  setLargeText: () => {},\n  lineSpacing: 1,\n  setLineSpacing: () => {},\n  focusIndicator: 'default',\n  setFocusIndicator: () => {},\n  keyboardShortcuts: true,\n  setKeyboardShortcuts: () => {},\n  textSpacing: false,\n  setTextSpacing: () => {},\n  colorFilters: 'none',\n  setColorFilters: () => {},\n});\n\n// Context for AI functionality\nexport const AIContext = createContext(null);\n\n// Preload AI models when the app starts\nconst preloadAIModels = async () => {\n  try {\n    console.log('Preloading AI models...');\n    \n    // Warm up TensorFlow.js\n    await tf.ready();\n    console.log('TensorFlow.js is ready');\n    \n    // Return initialization status\n    return {\n      initialized: true,\n      error: null\n    };\n  } catch (error) {\n    console.error('Error preloading AI models:', error);\n    return {\n      initialized: false,\n      error: error.message\n    };\n  }\n};\n\n// Wrap App in AccessibilityProvider for context\nconst AccessibilityProvider = ({ children }) => {\n  // Initialize accessibility settings from localStorage\n  const [voiceAssist, setVoiceAssist] = useState(() => {\n    return localStorage.getItem('voiceAssist') === 'true';\n  });\n  \n  const [reduceMotion, setReduceMotion] = useState(() => {\n    return localStorage.getItem('reduceMotion') === 'true';\n  });\n  \n  const [highContrast, setHighContrast] = useState(() => {\n    return localStorage.getItem('highContrast') === 'true';\n  });\n  \n  const [largeText, setLargeText] = useState(() => {\n    return localStorage.getItem('largeText') === 'true';\n  });\n  \n  const [lineSpacing, setLineSpacing] = useState(() => {\n    const savedValue = localStorage.getItem('lineSpacing');\n    return savedValue ? parseFloat(savedValue) : 1;\n  });\n  \n  const [focusIndicator, setFocusIndicator] = useState(() => {\n    return localStorage.getItem('focusIndicator') || 'default';\n  });\n  \n  const [keyboardShortcuts, setKeyboardShortcuts] = useState(() => {\n    const savedValue = localStorage.getItem('keyboardShortcuts');\n    return savedValue === null ? true : savedValue === 'true';\n  });\n  \n  const [textSpacing, setTextSpacing] = useState(() => {\n    return localStorage.getItem('textSpacing') === 'true';\n  });\n  \n  const [colorFilters, setColorFilters] = useState(() => {\n    return localStorage.getItem('colorFilters') || 'none';\n  });\n\n  // AI state\n  const [aiStatus, setAiStatus] = useState({\n    initialized: false,\n    loading: true,\n    error: null\n  });\n\n  // Initialize AI models on component mount\n  useEffect(() => {\n    const initializeAI = async () => {\n      const status = await preloadAIModels();\n      setAiStatus({\n        initialized: status.initialized,\n        loading: false,\n        error: status.error\n      });\n    };\n    \n    initializeAI();\n  }, []);\n\n  // Update localStorage when accessibility settings change\n  useEffect(() => {\n    localStorage.setItem('voiceAssist', voiceAssist);\n    localStorage.setItem('reduceMotion', reduceMotion);\n    localStorage.setItem('highContrast', highContrast);\n    localStorage.setItem('largeText', largeText);\n    localStorage.setItem('lineSpacing', lineSpacing);\n    localStorage.setItem('focusIndicator', focusIndicator);\n    localStorage.setItem('keyboardShortcuts', keyboardShortcuts);\n    localStorage.setItem('textSpacing', textSpacing);\n    localStorage.setItem('colorFilters', colorFilters);\n  }, [voiceAssist, reduceMotion, highContrast, largeText, lineSpacing, focusIndicator, keyboardShortcuts, textSpacing, colorFilters]);\n\n  // Create theme with light/dark mode and accessibility preferences\n  const theme = useMemo(() => {\n    const baseTheme = createTheme({\n      palette: {\n        mode: 'light',\n        ...(highContrast\n          ? {\n              // Light mode colors\n              primary: {\n                main: '#0050A0',\n              },\n              secondary: {\n                main: '#D03060',\n              },\n            }\n          : {\n              // Dark mode colors\n              primary: {\n                main: '#60A0FF',\n              },\n              secondary: {\n                main: '#FF6090',\n              },\n            }),\n      },\n      typography: {\n        fontSize: largeText ? 16 : 14,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        h1: {\n          fontSize: largeText ? '2.8rem' : '2.5rem',\n        },\n        h2: {\n          fontSize: largeText ? '2.3rem' : '2rem',\n        },\n        h3: {\n          fontSize: largeText ? '2rem' : '1.75rem',\n        },\n        h4: {\n          fontSize: largeText ? '1.8rem' : '1.5rem',\n        },\n        h5: {\n          fontSize: largeText ? '1.5rem' : '1.25rem',\n        },\n        h6: {\n          fontSize: largeText ? '1.3rem' : '1.1rem',\n        },\n        body1: {\n          lineHeight: lineSpacing,\n        },\n        body2: {\n          lineHeight: lineSpacing,\n        },\n      },\n      components: {\n        MuiButton: {\n          styleOverrides: {\n            root: {\n              borderRadius: '8px',\n              ...(highContrast && {\n                borderWidth: '2px',\n              }),\n            },\n          },\n        },\n        MuiFocusVisible: {\n          styleOverrides: {\n            root: {\n              outline: focusIndicator === 'high' \n                ? '3px solid #F00 !important' \n                : focusIndicator === 'enhanced' \n                  ? '2px solid #0076FF !important' \n                  : undefined,\n            },\n          },\n        },\n      },\n    });\n\n    return baseTheme;\n  }, [highContrast, largeText, lineSpacing, focusIndicator]);\n\n  const contextValue = {\n    voiceAssist,\n    setVoiceAssist,\n    reduceMotion,\n    setReduceMotion,\n    highContrast,\n    setHighContrast,\n    largeText,\n    setLargeText,\n    lineSpacing,\n    setLineSpacing,\n    focusIndicator,\n    setFocusIndicator,\n    keyboardShortcuts,\n    setKeyboardShortcuts,\n    textSpacing,\n    setTextSpacing,\n    colorFilters,\n    setColorFilters,\n  };\n\n  return (\n    <AccessibilityContext.Provider value={contextValue}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <AIContext.Provider value={{\n          status: aiStatus,\n          setStatus: setAiStatus\n        }}>\n          <SocketProvider>\n            {children}\n          </SocketProvider>\n        </AIContext.Provider>\n      </ThemeProvider>\n    </AccessibilityContext.Provider>\n  );\n};\n\n// Enhanced calibration component\nconst FaceCalibration = ({ isIOS, onCalibrationComplete }) => {\n  const [needsCalibration, setNeedsCalibration] = useState(!isIOS);\n  const [calibrationStep, setCalibrationStep] = useState(0);\n  const [calibrating, setCalibrating] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const videoRef = useRef(null);\n  const { status, setStatus } = useContext(AIContext);\n  \n  // Check if we have stored calibration data\n  useEffect(() => {\n    const savedCalibration = localStorage.getItem('faceCalibration');\n    if (savedCalibration && !isIOS) {\n      try {\n        const calibrationData = JSON.parse(savedCalibration);\n        if (calibrationData.timestamp > Date.now() - (30 * 24 * 60 * 60 * 1000)) {\n          // Use calibration if less than 30 days old\n          setNeedsCalibration(false);\n          onCalibrationComplete(calibrationData.scaleFactor);\n        }\n      } catch (e) {\n        console.warn('Invalid calibration data, recalibrating');\n      }\n    }\n  }, [isIOS, onCalibrationComplete]);\n  \n  const startCalibration = () => {\n    setDialogOpen(true);\n    setCalibrationStep(1);\n  };\n  \n  const handleCalibration = async () => {\n    setCalibrating(true);\n    \n    // Simulate calibration progress\n    const interval = setInterval(() => {\n      setProgress(prev => {\n        if (prev >= 100) {\n          clearInterval(interval);\n          return 100;\n        }\n        return prev + 5;\n      });\n    }, 200);\n    \n    try {\n      // Capture face landmarks at fixed distance with reference object\n      await new Promise(resolve => setTimeout(resolve, 4000)); // Simulate processing\n      \n      // Standard credit card width in mm\n      const creditCardWidth = 85.60;\n      \n      // Calculate scale factor (this would use real measurements in production)\n      const scaleFactor = creditCardWidth / 0.15; // Simulated ratio\n      \n      // Save calibration data\n      const calibrationData = {\n        scaleFactor,\n        timestamp: Date.now(),\n        deviceId: navigator.userAgent\n      };\n      \n      localStorage.setItem('faceCalibration', JSON.stringify(calibrationData));\n      \n      // Update AI context\n      setStatus(prev => ({\n        ...prev,\n        calibration: calibrationData\n      }));\n      \n      setNeedsCalibration(false);\n      onCalibrationComplete(scaleFactor);\n      \n      // Move to completion step\n      setCalibrationStep(3);\n    } catch (error) {\n      console.error('Calibration failed:', error);\n      setCalibrationStep(4); // Error step\n    } finally {\n      clearInterval(interval);\n      setCalibrating(false);\n      setProgress(100);\n    }\n  };\n  \n  const closeDialog = () => {\n    setDialogOpen(false);\n    setCalibrationStep(0);\n    setProgress(0);\n  };\n  \n  return (\n    <>\n      {needsCalibration && (\n        <Button \n          variant=\"contained\" \n          startIcon={<CreditCardIcon />}\n          onClick={startCalibration}\n          sx={{ mt: 2 }}\n        >\n          Calibrate Measurements\n        </Button>\n      )}\n      \n      <Dialog open={dialogOpen} onClose={calibrating ? undefined : closeDialog}>\n        <DialogTitle>\n          {calibrationStep === 1 && \"Measurement Calibration\"}\n          {calibrationStep === 2 && \"Calibrating...\"}\n          {calibrationStep === 3 && \"Calibration Complete\"}\n          {calibrationStep === 4 && \"Calibration Failed\"}\n        </DialogTitle>\n        <DialogContent>\n          {calibrationStep === 1 && (\n            <>\n              <Typography gutterBottom>\n                For accurate measurements, we need to calibrate the system.\n              </Typography>\n              <Typography gutterBottom>\n                Please hold a credit card (or ID card) centered under your chin,\n                about 6 inches from your face.\n              </Typography>\n              <Box sx={{ textAlign: 'center', my: 2 }}>\n                <img \n                  src=\"/images/calibration-guide.svg\" \n                  alt=\"Hold card under chin\" \n                  width={240} \n                  height={180} \n                />\n              </Box>\n            </>\n          )}\n          \n          {calibrationStep === 2 && (\n            <>\n              <Typography gutterBottom>\n                Keep the card steady and look straight ahead...\n              </Typography>\n              <Box sx={{ my: 3 }}>\n                <LinearProgress variant=\"determinate\" value={progress} />\n              </Box>\n              {videoRef.current && (\n                <Box sx={{ textAlign: 'center', mt: 2 }}>\n                  <video\n                    ref={videoRef}\n                    style={{ width: '100%', borderRadius: '8px' }}\n                    autoPlay\n                    muted\n                    playsInline\n                  />\n                </Box>\n              )}\n            </>\n          )}\n          \n          {calibrationStep === 3 && (\n            <Typography>\n              Calibration successful! Your measurements will now be accurate.\n            </Typography>\n          )}\n          \n          {calibrationStep === 4 && (\n            <>\n              <Typography color=\"error\" gutterBottom>\n                Calibration failed. Please try again in better lighting conditions.\n              </Typography>\n              <Typography variant=\"body2\">\n                Make sure your face is clearly visible and the card edges are distinct.\n              </Typography>\n            </>\n          )}\n        </DialogContent>\n        <DialogActions>\n          {calibrationStep === 1 && (\n            <>\n              <Button onClick={closeDialog}>Skip</Button>\n              <Button \n                onClick={() => {\n                  setCalibrationStep(2);\n                  handleCalibration();\n                }} \n                variant=\"contained\"\n              >\n                Start Calibration\n              </Button>\n            </>\n          )}\n          \n          {calibrationStep === 2 && (\n            <Button disabled>Calibrating...</Button>\n          )}\n          \n          {(calibrationStep === 3 || calibrationStep === 4) && (\n            <Button onClick={closeDialog} variant=\"contained\">\n              {calibrationStep === 3 ? \"Done\" : \"Try Again\"}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AccessibilityProvider>\n        <SocketProvider>\n          <App />\n        </SocketProvider>\n      </AccessibilityProvider>\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// Register service worker for offline capabilities\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/sw.js')\n      .then(registration => {\n        console.log('ServiceWorker registered:', registration.scope);\n      })\n      .catch(error => {\n        console.error('ServiceWorker registration failed:', error);\n      });\n  });\n} \n\nasync function loadResonanceModelAsync() {\n  try {\n    // Track loading progress for UI feedback\n    let loadProgress = 0;\n    if (onProgressUpdate) {\n      onProgressUpdate({ stage: 'model_init', progress: loadProgress });\n    }\n    \n    // Model version - increment when architecture changes\n    const MODEL_VERSION = '1.0.0';\n    const MODEL_KEY = 'indexeddb://qifr-model-v' + MODEL_VERSION;\n    \n    // Check if we have a saved model of the correct version\n    const savedModels = await tf.io.listModels();\n    \n    if (savedModels[MODEL_KEY]) {\n      // Load existing model with progress tracking\n      resonanceModel = await tf.loadLayersModel(MODEL_KEY, {\n        onProgress: (fraction) => {\n          loadProgress = Math.floor(fraction * 100);\n          if (onProgressUpdate) {\n            onProgressUpdate({ \n              stage: 'model_loading', \n              progress: loadProgress \n            });\n          }\n        }\n      });\n      console.log(`QIFR Model v${MODEL_VERSION} loaded from IndexedDB`);\n    } else {\n      // Create new model\n      console.log(`Creating new QIFR Model v${MODEL_VERSION}`);\n      if (onProgressUpdate) {\n        onProgressUpdate({ stage: 'model_creating', progress: 30 });\n      }\n      \n      resonanceModel = tf.sequential();\n      resonanceModel.add(tf.layers.dense({ \n        units: 128, \n        inputShape: [474], \n        activation: 'relu',\n        kernelRegularizer: tf.regularizers.l2(0.001)\n      }));\n      resonanceModel.add(tf.layers.dropout({ rate: 0.25 }));\n      resonanceModel.add(tf.layers.dense({ \n        units: 64, \n        activation: 'relu' \n      }));\n      resonanceModel.add(tf.layers.dense({ \n        units: 8, \n        activation: 'sigmoid' \n      }));\n      \n      resonanceModel.compile({ \n        optimizer: 'adam', \n        loss: 'meanSquaredError',\n        metrics: ['accuracy']\n      });\n      \n      if (onProgressUpdate) {\n        onProgressUpdate({ stage: 'model_saving', progress: 70 });\n      }\n      \n      // Save model for offline use\n      try {\n        await resonanceModel.save(MODEL_KEY);\n        console.log(`QIFR Model v${MODEL_VERSION} saved to IndexedDB`);\n      } catch (saveError) {\n        // Log error but continue - model will still work for this session\n        console.warn('Could not save model to IndexedDB:', saveError);\n      }\n    }\n    \n    // Clean up old model versions\n    const modelKeys = Object.keys(savedModels);\n    const oldVersions = modelKeys.filter(key => \n      key.startsWith('indexeddb://qifr-model-v') && \n      key !== MODEL_KEY\n    );\n    \n    if (oldVersions.length > 0) {\n      console.log('Cleaning up old model versions');\n      for (const oldKey of oldVersions) {\n        try {\n          await tf.io.removeModel(oldKey);\n        } catch (e) {\n          console.warn(`Failed to remove old model ${oldKey}:`, e);\n        }\n      }\n    }\n    \n    isModelLoaded = true;\n    \n    if (onProgressUpdate) {\n      onProgressUpdate({ stage: 'model_ready', progress: 100 });\n    }\n    \n    // Warm up the model with a dummy prediction\n    warmUpModel();\n    \n    return true;\n  } catch (error) {\n    console.error('Error loading QIFR model:', error);\n    \n    // Attempt to create a simpler fallback model\n    try {\n      console.warn('Creating simplified fallback model');\n      resonanceModel = tf.sequential();\n      resonanceModel.add(tf.layers.dense({ units: 32, inputShape: [474], activation: 'relu' }));\n      resonanceModel.add(tf.layers.dense({ units: 8, activation: 'sigmoid' }));\n      resonanceModel.compile({ optimizer: 'sgd', loss: 'meanSquaredError' });\n      isModelLoaded = true;\n      \n      if (onProgressUpdate) {\n        onProgressUpdate({ stage: 'fallback_ready', progress: 100 });\n      }\n      \n      return true;\n    } catch (fallbackError) {\n      console.error('Even fallback model creation failed:', fallbackError);\n      isModelLoaded = false;\n      \n      if (onProgressUpdate) {\n        onProgressUpdate({ stage: 'model_failed', progress: 0, error: error.message });\n      }\n      \n      return false;\n    }\n  }\n}\n\n// Pre-warm the model to avoid first inference delay\nfunction warmUpModel() {\n  try {\n    const dummyInput = tf.zeros([1, 474]);\n    const warmupResult = resonanceModel.predict(dummyInput);\n    warmupResult.dataSync(); // Force execution\n    tf.dispose([dummyInput, warmupResult]); // Clean up\n    console.log('Model warmed up');\n  } catch (e) {\n    console.warn('Model warmup failed:', e);\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}