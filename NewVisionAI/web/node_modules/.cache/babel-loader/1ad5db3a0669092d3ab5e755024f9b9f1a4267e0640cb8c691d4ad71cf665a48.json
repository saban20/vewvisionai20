{"ast":null,"code":"var _jsxFileName = \"/Users/saban/Desktop/New VisionAi 2.0/NewVisionAI/web/src/components/FaceScanner/RealtimeFaceAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { Box, Typography, CircularProgress, Alert, Paper, Grid, Chip } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { subscribeToEvent, unsubscribeFromEvent, emitEvent } from '../../services/socketService';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst RealtimeFaceAnalysis = ({\n  userId,\n  measurementId\n}) => {\n  _s();\n  const [status, setStatus] = useState('idle');\n  const [measurements, setMeasurements] = useState(null);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [confidenceHistory, setConfidenceHistory] = useState([]);\n  const [error, setError] = useState(null);\n  const processingTimerRef = useRef(null);\n\n  // Use useMemo for chart data to prevent unnecessary re-renders\n  const chartData = useMemo(() => ({\n    labels: confidenceHistory.map((_, index) => `Update ${index + 1}`),\n    datasets: [{\n      label: 'Confidence Score',\n      data: confidenceHistory,\n      fill: false,\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      tension: 0.4\n    }]\n  }), [confidenceHistory]);\n\n  // Use useMemo for chart options to prevent recalculation on every render\n  const chartOptions = useMemo(() => {\n    const minValue = confidenceHistory.length > 0 ? Math.max(0, Math.min(...confidenceHistory) - 0.1) : 0;\n    return {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top'\n        },\n        title: {\n          display: true,\n          text: 'AI Confidence Score History'\n        }\n      },\n      scales: {\n        y: {\n          beginAtZero: false,\n          min: minValue,\n          max: 1.0\n        }\n      }\n    };\n  }, [confidenceHistory]);\n\n  // Handle processing updates from the server\n  const handleProcessingUpdate = useRef(data => {\n    setStatus(data.status);\n    if (data.measurements) {\n      setMeasurements(data.measurements);\n    }\n    if (data.status === 'processing_complete') {\n      // Start analysis when processing is complete\n      requestAnalysis(data.measurement_id);\n    }\n  }).current;\n\n  // Handle processing errors from the server\n  const handleProcessingError = useRef(data => {\n    setError(data.error);\n    setStatus('error');\n  }).current;\n\n  // Handle analysis results from the server\n  const handleAnalysisResult = useRef(data => {\n    setAnalysisResults(data);\n    setStatus('analysis_complete');\n\n    // Add the confidence score to the history\n    if (data.confidence) {\n      setConfidenceHistory(prev => [...prev, data.confidence]);\n    }\n  }).current;\n\n  // Request face analysis from the server\n  const requestAnalysis = useRef(measurementId => {\n    setStatus('analyzing');\n\n    // Emit an event to request face analysis\n    emitEvent('face_analysis_request', {\n      measurement_id: measurementId,\n      request_id: Date.now().toString(),\n      user_id: userId\n    });\n  }).current;\n\n  // Initialize event listeners when component mounts\n  useEffect(() => {\n    // Subscribe to socket events\n    subscribeToEvent('processing_update', handleProcessingUpdate);\n    subscribeToEvent('processing_error', handleProcessingError);\n    subscribeToEvent('face_analysis_result', handleAnalysisResult);\n\n    // Request initial analysis if we have a measurement ID\n    if (measurementId) {\n      requestAnalysis(measurementId);\n    }\n\n    // Start simulated real-time updates for demo purposes\n    processingTimerRef.current = setInterval(() => {\n      if (status === 'analyzing') {\n        // Simulate receiving updated confidence scores\n        const newConfidence = 0.7 + Math.random() * 0.3; // Random between 0.7 and 1.0\n        setConfidenceHistory(prev => [...prev, newConfidence]);\n\n        // Update the analysis results with the new confidence\n        setAnalysisResults(prev => {\n          if (prev) {\n            return {\n              ...prev,\n              confidence_score: newConfidence\n            };\n          }\n          return prev;\n        });\n      }\n    }, 2000);\n\n    // Cleanup function to unsubscribe from events\n    return () => {\n      unsubscribeFromEvent('processing_update', handleProcessingUpdate);\n      unsubscribeFromEvent('processing_error', handleProcessingError);\n      unsubscribeFromEvent('face_analysis_result', handleAnalysisResult);\n      if (processingTimerRef.current) {\n        clearInterval(processingTimerRef.current);\n      }\n    };\n  }, [handleProcessingUpdate, handleProcessingError, handleAnalysisResult, requestAnalysis, measurementId, status]);\n\n  // Render based on current status\n  const renderContent = () => {\n    switch (status) {\n      case 'idle':\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            p: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: \"Waiting for face scan data...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this);\n      case 'processing_started':\n      case 'face_detected':\n      case 'measurements_extracted':\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              mt: 2\n            },\n            children: \"Processing your face scan...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: status === 'processing_started' ? 'Initializing analysis...' : status === 'face_detected' ? 'Face detected! Extracting measurements...' : 'Measurements extracted! Finalizing analysis...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this);\n      case 'analyzing':\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24,\n              sx: {\n                mr: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: \"Analyzing your face measurements in real-time...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), analysisResults && /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 2,\n            sx: {\n              p: 2,\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Current Analysis Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: \"Face Shape:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: analysisResults.face_shape\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: \"Confidence Score:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: [(analysisResults.confidence_score * 100).toFixed(1), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: \"Recommended Styles:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    gap: 1,\n                    mt: 1\n                  },\n                  children: analysisResults.recommended_styles && analysisResults.recommended_styles.map((style, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                    label: style,\n                    color: \"primary\",\n                    variant: \"outlined\"\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), confidenceHistory.length > 1 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              data: chartData,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this);\n      case 'analysis_complete':\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"success\",\n            sx: {\n              mb: 3\n            },\n            children: \"Analysis complete! Here are your results.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), analysisResults && /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            sx: {\n              p: 3,\n              mb: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Final Analysis Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: \"Face Shape:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: analysisResults.face_shape\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: \"Confidence Score:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: [(analysisResults.confidence_score * 100).toFixed(1), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  children: \"Recommended Styles:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    gap: 1,\n                    mt: 1\n                  },\n                  children: analysisResults.recommended_styles && analysisResults.recommended_styles.map((style, index) => /*#__PURE__*/_jsxDEV(Chip, {\n                    label: style,\n                    color: \"primary\"\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), confidenceHistory.length > 1 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              data: chartData,\n              options: chartOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            children: error || 'An error occurred during processing.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            textAlign: 'center',\n            p: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      bgcolor: 'background.paper',\n      borderRadius: 2,\n      overflow: 'hidden',\n      boxShadow: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        bgcolor: 'primary.main',\n        color: 'primary.contrastText'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Real-Time Face Analysis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), renderContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n_s(RealtimeFaceAnalysis, \"JD3T5mesDEocPwKSmeELcRL9M1I=\");\n_c = RealtimeFaceAnalysis;\nexport default RealtimeFaceAnalysis;\nvar _c;\n$RefreshReg$(_c, \"RealtimeFaceAnalysis\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useMemo","Box","Typography","CircularProgress","Alert","Paper","Grid","Chip","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","subscribeToEvent","unsubscribeFromEvent","emitEvent","jsxDEV","_jsxDEV","register","RealtimeFaceAnalysis","userId","measurementId","_s","status","setStatus","measurements","setMeasurements","analysisResults","setAnalysisResults","confidenceHistory","setConfidenceHistory","error","setError","processingTimerRef","chartData","labels","map","_","index","datasets","label","data","fill","backgroundColor","borderColor","tension","chartOptions","minValue","length","Math","max","min","responsive","plugins","legend","position","title","display","text","scales","y","beginAtZero","handleProcessingUpdate","requestAnalysis","measurement_id","current","handleProcessingError","handleAnalysisResult","confidence","prev","request_id","Date","now","toString","user_id","setInterval","newConfidence","random","confidence_score","clearInterval","renderContent","sx","textAlign","p","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","mt","color","alignItems","mb","size","mr","elevation","gutterBottom","container","spacing","item","xs","sm","face_shape","toFixed","flexWrap","gap","recommended_styles","style","options","severity","bgcolor","borderRadius","overflow","boxShadow","_c","$RefreshReg$"],"sources":["/Users/saban/Desktop/New VisionAi 2.0/NewVisionAI/web/src/components/FaceScanner/RealtimeFaceAnalysis.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { Box, Typography, CircularProgress, Alert, Paper, Grid, Chip } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { subscribeToEvent, unsubscribeFromEvent, emitEvent } from '../../services/socketService';\n\n// Register Chart.js components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst RealtimeFaceAnalysis = ({ userId, measurementId }) => {\n  const [status, setStatus] = useState('idle');\n  const [measurements, setMeasurements] = useState(null);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [confidenceHistory, setConfidenceHistory] = useState([]);\n  const [error, setError] = useState(null);\n  const processingTimerRef = useRef(null);\n  \n  // Use useMemo for chart data to prevent unnecessary re-renders\n  const chartData = useMemo(() => ({\n    labels: confidenceHistory.map((_, index) => `Update ${index + 1}`),\n    datasets: [\n      {\n        label: 'Confidence Score',\n        data: confidenceHistory,\n        fill: false,\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        tension: 0.4\n      }\n    ]\n  }), [confidenceHistory]);\n  \n  // Use useMemo for chart options to prevent recalculation on every render\n  const chartOptions = useMemo(() => {\n    const minValue = confidenceHistory.length > 0 \n      ? Math.max(0, Math.min(...confidenceHistory) - 0.1) \n      : 0;\n      \n    return {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top',\n        },\n        title: {\n          display: true,\n          text: 'AI Confidence Score History',\n        },\n      },\n      scales: {\n        y: {\n          beginAtZero: false,\n          min: minValue,\n          max: 1.0\n        }\n      }\n    };\n  }, [confidenceHistory]);\n  \n  // Handle processing updates from the server\n  const handleProcessingUpdate = useRef((data) => {\n    setStatus(data.status);\n    \n    if (data.measurements) {\n      setMeasurements(data.measurements);\n    }\n    \n    if (data.status === 'processing_complete') {\n      // Start analysis when processing is complete\n      requestAnalysis(data.measurement_id);\n    }\n  }).current;\n  \n  // Handle processing errors from the server\n  const handleProcessingError = useRef((data) => {\n    setError(data.error);\n    setStatus('error');\n  }).current;\n  \n  // Handle analysis results from the server\n  const handleAnalysisResult = useRef((data) => {\n    setAnalysisResults(data);\n    setStatus('analysis_complete');\n    \n    // Add the confidence score to the history\n    if (data.confidence) {\n      setConfidenceHistory(prev => [...prev, data.confidence]);\n    }\n  }).current;\n  \n  // Request face analysis from the server\n  const requestAnalysis = useRef((measurementId) => {\n    setStatus('analyzing');\n    \n    // Emit an event to request face analysis\n    emitEvent('face_analysis_request', {\n      measurement_id: measurementId,\n      request_id: Date.now().toString(),\n      user_id: userId\n    });\n  }).current;\n  \n  // Initialize event listeners when component mounts\n  useEffect(() => {\n    // Subscribe to socket events\n    subscribeToEvent('processing_update', handleProcessingUpdate);\n    subscribeToEvent('processing_error', handleProcessingError);\n    subscribeToEvent('face_analysis_result', handleAnalysisResult);\n    \n    // Request initial analysis if we have a measurement ID\n    if (measurementId) {\n      requestAnalysis(measurementId);\n    }\n    \n    // Start simulated real-time updates for demo purposes\n    processingTimerRef.current = setInterval(() => {\n      if (status === 'analyzing') {\n        // Simulate receiving updated confidence scores\n        const newConfidence = 0.7 + (Math.random() * 0.3); // Random between 0.7 and 1.0\n        setConfidenceHistory(prev => [...prev, newConfidence]);\n        \n        // Update the analysis results with the new confidence\n        setAnalysisResults(prev => {\n          if (prev) {\n            return {\n              ...prev,\n              confidence_score: newConfidence\n            };\n          }\n          return prev;\n        });\n      }\n    }, 2000);\n    \n    // Cleanup function to unsubscribe from events\n    return () => {\n      unsubscribeFromEvent('processing_update', handleProcessingUpdate);\n      unsubscribeFromEvent('processing_error', handleProcessingError);\n      unsubscribeFromEvent('face_analysis_result', handleAnalysisResult);\n      \n      if (processingTimerRef.current) {\n        clearInterval(processingTimerRef.current);\n      }\n    };\n  }, [handleProcessingUpdate, handleProcessingError, handleAnalysisResult, requestAnalysis, measurementId, status]);\n  \n  // Render based on current status\n  const renderContent = () => {\n    switch (status) {\n      case 'idle':\n        return (\n          <Box sx={{ textAlign: 'center', p: 3 }}>\n            <Typography variant=\"body1\">\n              Waiting for face scan data...\n            </Typography>\n          </Box>\n        );\n        \n      case 'processing_started':\n      case 'face_detected':\n      case 'measurements_extracted':\n        return (\n          <Box sx={{ textAlign: 'center', p: 3 }}>\n            <CircularProgress />\n            <Typography variant=\"body1\" sx={{ mt: 2 }}>\n              Processing your face scan...\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {status === 'processing_started' ? 'Initializing analysis...' : \n               status === 'face_detected' ? 'Face detected! Extracting measurements...' :\n               'Measurements extracted! Finalizing analysis...'}\n            </Typography>\n          </Box>\n        );\n        \n      case 'analyzing':\n        return (\n          <Box sx={{ p: 3 }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n              <CircularProgress size={24} sx={{ mr: 2 }} />\n              <Typography variant=\"body1\">\n                Analyzing your face measurements in real-time...\n              </Typography>\n            </Box>\n            \n            {analysisResults && (\n              <Paper elevation={2} sx={{ p: 2, mb: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Current Analysis Results\n                </Typography>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\">Face Shape:</Typography>\n                    <Typography variant=\"body1\">{analysisResults.face_shape}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\">Confidence Score:</Typography>\n                    <Typography variant=\"body1\">{(analysisResults.confidence_score * 100).toFixed(1)}%</Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant=\"subtitle2\">Recommended Styles:</Typography>\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n                      {analysisResults.recommended_styles && analysisResults.recommended_styles.map((style, index) => (\n                        <Chip key={index} label={style} color=\"primary\" variant=\"outlined\" />\n                      ))}\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Paper>\n            )}\n            \n            {confidenceHistory.length > 1 && (\n              <Box sx={{ mt: 3 }}>\n                <Line data={chartData} options={chartOptions} />\n              </Box>\n            )}\n          </Box>\n        );\n        \n      case 'analysis_complete':\n        return (\n          <Box sx={{ p: 3 }}>\n            <Alert severity=\"success\" sx={{ mb: 3 }}>\n              Analysis complete! Here are your results.\n            </Alert>\n            \n            {analysisResults && (\n              <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>\n                  Final Analysis Results\n                </Typography>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\">Face Shape:</Typography>\n                    <Typography variant=\"body1\">{analysisResults.face_shape}</Typography>\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <Typography variant=\"subtitle2\">Confidence Score:</Typography>\n                    <Typography variant=\"body1\">{(analysisResults.confidence_score * 100).toFixed(1)}%</Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography variant=\"subtitle2\">Recommended Styles:</Typography>\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\n                      {analysisResults.recommended_styles && analysisResults.recommended_styles.map((style, index) => (\n                        <Chip key={index} label={style} color=\"primary\" />\n                      ))}\n                    </Box>\n                  </Grid>\n                </Grid>\n              </Paper>\n            )}\n            \n            {confidenceHistory.length > 1 && (\n              <Box sx={{ mt: 3 }}>\n                <Line data={chartData} options={chartOptions} />\n              </Box>\n            )}\n          </Box>\n        );\n        \n      case 'error':\n        return (\n          <Box sx={{ p: 3 }}>\n            <Alert severity=\"error\">\n              {error || 'An error occurred during processing.'}\n            </Alert>\n          </Box>\n        );\n        \n      default:\n        return (\n          <Box sx={{ textAlign: 'center', p: 3 }}>\n            <Typography variant=\"body1\">\n              {status}\n            </Typography>\n          </Box>\n        );\n    }\n  };\n  \n  return (\n    <Box sx={{ \n      bgcolor: 'background.paper', \n      borderRadius: 2,\n      overflow: 'hidden',\n      boxShadow: 3 \n    }}>\n      <Box sx={{ \n        p: 2, \n        bgcolor: 'primary.main', \n        color: 'primary.contrastText' \n      }}>\n        <Typography variant=\"h6\">\n          Real-Time Face Analysis\n        </Typography>\n      </Box>\n      \n      {renderContent()}\n    </Box>\n  );\n};\n\nexport default RealtimeFaceAnalysis; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}