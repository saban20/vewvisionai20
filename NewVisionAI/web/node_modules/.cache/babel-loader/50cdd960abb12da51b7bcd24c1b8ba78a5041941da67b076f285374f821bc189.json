{"ast":null,"code":"class AIEyewearEngine {\n  constructor(videoElement, canvasElement) {\n    this.videoElement = videoElement;\n    this.canvasElement = canvasElement;\n    this.context = canvasElement.getContext('2d');\n    this.stream = null;\n    this.measurements = null;\n    this.faceShape = null;\n  }\n  async initialize() {\n    try {\n      // Request camera access\n      const constraints = {\n        video: {\n          width: {\n            ideal: 1280\n          },\n          height: {\n            ideal: 720\n          },\n          facingMode: 'user'\n        }\n      };\n      this.stream = await navigator.mediaDevices.getUserMedia(constraints);\n      if (this.videoElement) {\n        this.videoElement.srcObject = this.stream;\n        this.videoElement.playsInline = true;\n        this.videoElement.muted = true;\n        this.videoElement.style.transform = 'scaleX(-1)'; // Mirror view\n      }\n\n      // Start face tracking\n      this.startFaceTracking();\n      return true;\n    } catch (error) {\n      console.error('AIEyewearEngine initialization error:', error);\n      return false;\n    }\n  }\n  startFaceTracking() {\n    // In a real implementation, this would use a face tracking library\n    // like TensorFlow.js, face-api.js, or a custom model\n    this.trackingInterval = setInterval(() => {\n      this.analyzeFrame();\n    }, 100);\n  }\n  analyzeFrame() {\n    if (!this.videoElement || !this.canvasElement) return;\n\n    // Draw the current video frame to the canvas\n    this.context.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n    this.context.drawImage(this.videoElement, 0, 0, this.canvasElement.width, this.canvasElement.height);\n\n    // Draw face tracking overlay (simulated)\n    this.drawFaceTrackingOverlay();\n\n    // In a real implementation, we would analyze the image and extract measurements\n    // For this demo, we'll simulate face measurements\n    this.simulateFaceMeasurements();\n  }\n  drawFaceTrackingOverlay() {\n    // Draw face tracking points and guides\n    this.context.strokeStyle = 'rgba(0, 255, 255, 0.8)';\n    this.context.lineWidth = 2;\n\n    // Draw face oval (simulated)\n    const centerX = this.canvasElement.width / 2;\n    const centerY = this.canvasElement.height / 2;\n\n    // Face outline\n    this.context.beginPath();\n    this.context.ellipse(centerX, centerY, 100, 140, 0, 0, 2 * Math.PI);\n    this.context.stroke();\n\n    // Eye tracking points\n    this.context.fillStyle = 'rgba(0, 255, 255, 0.8)';\n    this.context.beginPath();\n    this.context.arc(centerX - 40, centerY - 30, 5, 0, 2 * Math.PI);\n    this.context.fill();\n    this.context.beginPath();\n    this.context.arc(centerX + 40, centerY - 30, 5, 0, 2 * Math.PI);\n    this.context.fill();\n\n    // Nose point\n    this.context.beginPath();\n    this.context.arc(centerX, centerY + 10, 5, 0, 2 * Math.PI);\n    this.context.fill();\n\n    // Mouth points\n    this.context.beginPath();\n    this.context.arc(centerX - 25, centerY + 50, 3, 0, 2 * Math.PI);\n    this.context.fill();\n    this.context.beginPath();\n    this.context.arc(centerX + 25, centerY + 50, 3, 0, 2 * Math.PI);\n    this.context.fill();\n\n    // Measurement lines\n    this.context.setLineDash([5, 3]);\n    this.context.beginPath();\n    this.context.moveTo(centerX - 100, centerY);\n    this.context.lineTo(centerX + 100, centerY);\n    this.context.stroke();\n    this.context.beginPath();\n    this.context.moveTo(centerX, centerY - 140);\n    this.context.lineTo(centerX, centerY + 140);\n    this.context.stroke();\n    this.context.setLineDash([]);\n  }\n  simulateFaceMeasurements() {\n    // In a real implementation, these would be actual measurements\n    // based on detected facial features\n    this.measurements = {\n      faceWidth: 142,\n      faceHeight: 205,\n      interPupillaryDistance: 63,\n      noseToEar: 97,\n      templeLength: 145,\n      faceShape: this.determineFaceShape()\n    };\n  }\n  determineFaceShape() {\n    // In a real implementation, this would analyze face proportions to determine shape\n    // For this demo, we'll return a random face shape\n    const shapes = ['Oval', 'Round', 'Square', 'Heart', 'Diamond', 'Rectangle'];\n    const randomIndex = Math.floor(Math.random() * shapes.length);\n    this.faceShape = shapes[randomIndex];\n    return this.faceShape;\n  }\n  getMeasurements() {\n    if (!this.measurements) {\n      this.simulateFaceMeasurements();\n    }\n\n    // Capture the current frame data\n    const capturedImage = this.canvasElement.toDataURL('image/png');\n    return {\n      ...this.measurements,\n      capturedImage\n    };\n  }\n  getRecommendedStyle() {\n    // Based on face shape, recommend frame styles\n    const recommendations = {\n      'Oval': [{\n        id: 101,\n        name: 'Classic Aviator',\n        matchPercentage: 95\n      }, {\n        id: 102,\n        name: 'Rectangular',\n        matchPercentage: 90\n      }, {\n        id: 103,\n        name: 'Wayfarer',\n        matchPercentage: 85\n      }],\n      'Round': [{\n        id: 201,\n        name: 'Square Frame',\n        matchPercentage: 95\n      }, {\n        id: 202,\n        name: 'Rectangle',\n        matchPercentage: 92\n      }, {\n        id: 203,\n        name: 'Geometric',\n        matchPercentage: 80\n      }],\n      'Square': [{\n        id: 301,\n        name: 'Round Frame',\n        matchPercentage: 95\n      }, {\n        id: 302,\n        name: 'Oval',\n        matchPercentage: 90\n      }, {\n        id: 303,\n        name: 'Cat Eye',\n        matchPercentage: 85\n      }],\n      'Heart': [{\n        id: 401,\n        name: 'Bottom-Heavy Frame',\n        matchPercentage: 95\n      }, {\n        id: 402,\n        name: 'Oval',\n        matchPercentage: 88\n      }, {\n        id: 403,\n        name: 'Rimless',\n        matchPercentage: 82\n      }],\n      'Diamond': [{\n        id: 501,\n        name: 'Rimless',\n        matchPercentage: 95\n      }, {\n        id: 502,\n        name: 'Cat Eye',\n        matchPercentage: 90\n      }, {\n        id: 503,\n        name: 'Oval',\n        matchPercentage: 85\n      }],\n      'Rectangle': [{\n        id: 601,\n        name: 'Round Frame',\n        matchPercentage: 95\n      }, {\n        id: 602,\n        name: 'Square',\n        matchPercentage: 80\n      }, {\n        id: 603,\n        name: 'Aviator',\n        matchPercentage: 85\n      }]\n    };\n    return recommendations[this.faceShape] || recommendations['Oval'];\n  }\n  stop() {\n    // Stop tracking interval\n    if (this.trackingInterval) {\n      clearInterval(this.trackingInterval);\n    }\n\n    // Stop video stream\n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop());\n    }\n\n    // Clear canvas\n    if (this.context) {\n      this.context.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n    }\n  }\n}\nexport default AIEyewearEngine;","map":{"version":3,"names":["AIEyewearEngine","constructor","videoElement","canvasElement","context","getContext","stream","measurements","faceShape","initialize","constraints","video","width","ideal","height","facingMode","navigator","mediaDevices","getUserMedia","srcObject","playsInline","muted","style","transform","startFaceTracking","error","console","trackingInterval","setInterval","analyzeFrame","clearRect","drawImage","drawFaceTrackingOverlay","simulateFaceMeasurements","strokeStyle","lineWidth","centerX","centerY","beginPath","ellipse","Math","PI","stroke","fillStyle","arc","fill","setLineDash","moveTo","lineTo","faceWidth","faceHeight","interPupillaryDistance","noseToEar","templeLength","determineFaceShape","shapes","randomIndex","floor","random","length","getMeasurements","capturedImage","toDataURL","getRecommendedStyle","recommendations","id","name","matchPercentage","stop","clearInterval","getTracks","forEach","track"],"sources":["/Users/saban/Desktop/New VisionAi 2.0/NewVisionAI/web/src/components/AIEyewearEngine.js"],"sourcesContent":["class AIEyewearEngine {\n  constructor(videoElement, canvasElement) {\n    this.videoElement = videoElement;\n    this.canvasElement = canvasElement;\n    this.context = canvasElement.getContext('2d');\n    this.stream = null;\n    this.measurements = null;\n    this.faceShape = null;\n  }\n\n  async initialize() {\n    try {\n      // Request camera access\n      const constraints = {\n        video: {\n          width: { ideal: 1280 },\n          height: { ideal: 720 },\n          facingMode: 'user'\n        }\n      };\n      \n      this.stream = await navigator.mediaDevices.getUserMedia(constraints);\n      \n      if (this.videoElement) {\n        this.videoElement.srcObject = this.stream;\n        this.videoElement.playsInline = true;\n        this.videoElement.muted = true;\n        this.videoElement.style.transform = 'scaleX(-1)'; // Mirror view\n      }\n      \n      // Start face tracking\n      this.startFaceTracking();\n      \n      return true;\n    } catch (error) {\n      console.error('AIEyewearEngine initialization error:', error);\n      return false;\n    }\n  }\n\n  startFaceTracking() {\n    // In a real implementation, this would use a face tracking library\n    // like TensorFlow.js, face-api.js, or a custom model\n    this.trackingInterval = setInterval(() => {\n      this.analyzeFrame();\n    }, 100);\n  }\n\n  analyzeFrame() {\n    if (!this.videoElement || !this.canvasElement) return;\n    \n    // Draw the current video frame to the canvas\n    this.context.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n    this.context.drawImage(this.videoElement, 0, 0, this.canvasElement.width, this.canvasElement.height);\n    \n    // Draw face tracking overlay (simulated)\n    this.drawFaceTrackingOverlay();\n    \n    // In a real implementation, we would analyze the image and extract measurements\n    // For this demo, we'll simulate face measurements\n    this.simulateFaceMeasurements();\n  }\n\n  drawFaceTrackingOverlay() {\n    // Draw face tracking points and guides\n    this.context.strokeStyle = 'rgba(0, 255, 255, 0.8)';\n    this.context.lineWidth = 2;\n    \n    // Draw face oval (simulated)\n    const centerX = this.canvasElement.width / 2;\n    const centerY = this.canvasElement.height / 2;\n    \n    // Face outline\n    this.context.beginPath();\n    this.context.ellipse(centerX, centerY, 100, 140, 0, 0, 2 * Math.PI);\n    this.context.stroke();\n    \n    // Eye tracking points\n    this.context.fillStyle = 'rgba(0, 255, 255, 0.8)';\n    this.context.beginPath();\n    this.context.arc(centerX - 40, centerY - 30, 5, 0, 2 * Math.PI);\n    this.context.fill();\n    \n    this.context.beginPath();\n    this.context.arc(centerX + 40, centerY - 30, 5, 0, 2 * Math.PI);\n    this.context.fill();\n    \n    // Nose point\n    this.context.beginPath();\n    this.context.arc(centerX, centerY + 10, 5, 0, 2 * Math.PI);\n    this.context.fill();\n    \n    // Mouth points\n    this.context.beginPath();\n    this.context.arc(centerX - 25, centerY + 50, 3, 0, 2 * Math.PI);\n    this.context.fill();\n    \n    this.context.beginPath();\n    this.context.arc(centerX + 25, centerY + 50, 3, 0, 2 * Math.PI);\n    this.context.fill();\n    \n    // Measurement lines\n    this.context.setLineDash([5, 3]);\n    this.context.beginPath();\n    this.context.moveTo(centerX - 100, centerY);\n    this.context.lineTo(centerX + 100, centerY);\n    this.context.stroke();\n    \n    this.context.beginPath();\n    this.context.moveTo(centerX, centerY - 140);\n    this.context.lineTo(centerX, centerY + 140);\n    this.context.stroke();\n    this.context.setLineDash([]);\n  }\n\n  simulateFaceMeasurements() {\n    // In a real implementation, these would be actual measurements\n    // based on detected facial features\n    this.measurements = {\n      faceWidth: 142,\n      faceHeight: 205,\n      interPupillaryDistance: 63,\n      noseToEar: 97,\n      templeLength: 145,\n      faceShape: this.determineFaceShape()\n    };\n  }\n\n  determineFaceShape() {\n    // In a real implementation, this would analyze face proportions to determine shape\n    // For this demo, we'll return a random face shape\n    const shapes = ['Oval', 'Round', 'Square', 'Heart', 'Diamond', 'Rectangle'];\n    const randomIndex = Math.floor(Math.random() * shapes.length);\n    this.faceShape = shapes[randomIndex];\n    return this.faceShape;\n  }\n\n  getMeasurements() {\n    if (!this.measurements) {\n      this.simulateFaceMeasurements();\n    }\n    \n    // Capture the current frame data\n    const capturedImage = this.canvasElement.toDataURL('image/png');\n    \n    return {\n      ...this.measurements,\n      capturedImage\n    };\n  }\n\n  getRecommendedStyle() {\n    // Based on face shape, recommend frame styles\n    const recommendations = {\n      'Oval': [\n        { id: 101, name: 'Classic Aviator', matchPercentage: 95 },\n        { id: 102, name: 'Rectangular', matchPercentage: 90 },\n        { id: 103, name: 'Wayfarer', matchPercentage: 85 }\n      ],\n      'Round': [\n        { id: 201, name: 'Square Frame', matchPercentage: 95 },\n        { id: 202, name: 'Rectangle', matchPercentage: 92 },\n        { id: 203, name: 'Geometric', matchPercentage: 80 }\n      ],\n      'Square': [\n        { id: 301, name: 'Round Frame', matchPercentage: 95 },\n        { id: 302, name: 'Oval', matchPercentage: 90 },\n        { id: 303, name: 'Cat Eye', matchPercentage: 85 }\n      ],\n      'Heart': [\n        { id: 401, name: 'Bottom-Heavy Frame', matchPercentage: 95 },\n        { id: 402, name: 'Oval', matchPercentage: 88 },\n        { id: 403, name: 'Rimless', matchPercentage: 82 }\n      ],\n      'Diamond': [\n        { id: 501, name: 'Rimless', matchPercentage: 95 },\n        { id: 502, name: 'Cat Eye', matchPercentage: 90 },\n        { id: 503, name: 'Oval', matchPercentage: 85 }\n      ],\n      'Rectangle': [\n        { id: 601, name: 'Round Frame', matchPercentage: 95 },\n        { id: 602, name: 'Square', matchPercentage: 80 },\n        { id: 603, name: 'Aviator', matchPercentage: 85 }\n      ]\n    };\n    \n    return recommendations[this.faceShape] || recommendations['Oval'];\n  }\n\n  stop() {\n    // Stop tracking interval\n    if (this.trackingInterval) {\n      clearInterval(this.trackingInterval);\n    }\n    \n    // Stop video stream\n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop());\n    }\n    \n    // Clear canvas\n    if (this.context) {\n      this.context.clearRect(0, 0, this.canvasElement.width, this.canvasElement.height);\n    }\n  }\n}\n\nexport default AIEyewearEngine; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}