{"ast":null,"code":"var _jsxFileName = \"/Users/saban/Desktop/New VisionAi 2.0/NewVisionAI/web/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useMemo } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\n// Import TensorFlow.js and preload the AI models\nimport * as tf from '@tensorflow/tfjs';\n\n// Create context for theme mode (light/dark)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext({\n  themeMode: 'light',\n  setThemeMode: () => {}\n});\n\n// Create context for accessibility settings\nexport const AccessibilityContext = /*#__PURE__*/createContext({\n  voiceAssist: false,\n  setVoiceAssist: () => {},\n  reduceMotion: false,\n  setReduceMotion: () => {},\n  highContrast: false,\n  setHighContrast: () => {},\n  largeText: false,\n  setLargeText: () => {},\n  lineSpacing: 1,\n  setLineSpacing: () => {},\n  focusIndicator: 'default',\n  setFocusIndicator: () => {},\n  keyboardShortcuts: true,\n  setKeyboardShortcuts: () => {},\n  textSpacing: false,\n  setTextSpacing: () => {},\n  colorFilters: 'none',\n  setColorFilters: () => {}\n});\n\n// Context for AI functionality\nexport const AIContext = /*#__PURE__*/createContext(null);\n\n// Preload AI models when the app starts\nconst preloadAIModels = async () => {\n  try {\n    console.log('Preloading AI models...');\n\n    // Warm up TensorFlow.js\n    await tf.ready();\n    console.log('TensorFlow.js is ready');\n\n    // Return initialization status\n    return {\n      initialized: true,\n      error: null\n    };\n  } catch (error) {\n    console.error('Error preloading AI models:', error);\n    return {\n      initialized: false,\n      error: error.message\n    };\n  }\n};\n\n// Root application with contexts\nconst Root = () => {\n  _s();\n  // Initialize theme mode from localStorage or default to 'light'\n  const [themeMode, setThemeMode] = useState(() => {\n    const savedMode = localStorage.getItem('themeMode');\n    return savedMode || 'light';\n  });\n\n  // Initialize accessibility settings from localStorage\n  const [voiceAssist, setVoiceAssist] = useState(() => {\n    return localStorage.getItem('voiceAssist') === 'true';\n  });\n  const [reduceMotion, setReduceMotion] = useState(() => {\n    return localStorage.getItem('reduceMotion') === 'true';\n  });\n  const [highContrast, setHighContrast] = useState(() => {\n    return localStorage.getItem('highContrast') === 'true';\n  });\n  const [largeText, setLargeText] = useState(() => {\n    return localStorage.getItem('largeText') === 'true';\n  });\n  const [lineSpacing, setLineSpacing] = useState(() => {\n    const savedValue = localStorage.getItem('lineSpacing');\n    return savedValue ? parseFloat(savedValue) : 1;\n  });\n  const [focusIndicator, setFocusIndicator] = useState(() => {\n    return localStorage.getItem('focusIndicator') || 'default';\n  });\n  const [keyboardShortcuts, setKeyboardShortcuts] = useState(() => {\n    const savedValue = localStorage.getItem('keyboardShortcuts');\n    return savedValue === null ? true : savedValue === 'true';\n  });\n  const [textSpacing, setTextSpacing] = useState(() => {\n    return localStorage.getItem('textSpacing') === 'true';\n  });\n  const [colorFilters, setColorFilters] = useState(() => {\n    return localStorage.getItem('colorFilters') || 'none';\n  });\n\n  // AI state\n  const [aiStatus, setAiStatus] = useState({\n    initialized: false,\n    loading: true,\n    error: null\n  });\n\n  // Initialize AI models on component mount\n  useEffect(() => {\n    const initializeAI = async () => {\n      const status = await preloadAIModels();\n      setAiStatus({\n        initialized: status.initialized,\n        loading: false,\n        error: status.error\n      });\n    };\n    initializeAI();\n  }, []);\n\n  // Update localStorage when theme mode changes\n  useEffect(() => {\n    localStorage.setItem('themeMode', themeMode);\n\n    // Apply theme class to document for global CSS variables\n    document.documentElement.setAttribute('data-theme', themeMode);\n\n    // Apply high contrast class if enabled\n    if (highContrast) {\n      document.documentElement.classList.add('high-contrast');\n    } else {\n      document.documentElement.classList.remove('high-contrast');\n    }\n\n    // Apply reduced motion preference to body\n    if (reduceMotion) {\n      document.body.classList.add('reduce-motion');\n    } else {\n      document.body.classList.remove('reduce-motion');\n    }\n\n    // Apply large text preference\n    if (largeText) {\n      document.body.classList.add('large-text');\n    } else {\n      document.body.classList.remove('large-text');\n    }\n\n    // Apply line spacing\n    document.documentElement.style.setProperty('--line-height-multiplier', lineSpacing);\n\n    // Apply focus indicator style\n    document.body.setAttribute('data-focus-indicator', focusIndicator);\n\n    // Apply text spacing\n    if (textSpacing) {\n      document.body.classList.add('increased-spacing');\n    } else {\n      document.body.classList.remove('increased-spacing');\n    }\n\n    // Apply color filters\n    document.body.setAttribute('data-color-filter', colorFilters);\n  }, [themeMode, highContrast, reduceMotion, largeText, lineSpacing, focusIndicator, textSpacing, colorFilters]);\n\n  // Update localStorage when accessibility settings change\n  useEffect(() => {\n    localStorage.setItem('voiceAssist', voiceAssist);\n    localStorage.setItem('reduceMotion', reduceMotion);\n    localStorage.setItem('highContrast', highContrast);\n    localStorage.setItem('largeText', largeText);\n    localStorage.setItem('lineSpacing', lineSpacing);\n    localStorage.setItem('focusIndicator', focusIndicator);\n    localStorage.setItem('keyboardShortcuts', keyboardShortcuts);\n    localStorage.setItem('textSpacing', textSpacing);\n    localStorage.setItem('colorFilters', colorFilters);\n  }, [voiceAssist, reduceMotion, highContrast, largeText, lineSpacing, focusIndicator, keyboardShortcuts, textSpacing, colorFilters]);\n\n  // Create theme with light/dark mode and accessibility preferences\n  const theme = useMemo(() => {\n    const baseTheme = createTheme({\n      palette: {\n        mode: themeMode,\n        ...(themeMode === 'light' ? {\n          // Light mode colors\n          primary: {\n            main: highContrast ? '#0050A0' : '#3f51b5'\n          },\n          secondary: {\n            main: highContrast ? '#D03060' : '#f50057'\n          }\n        } : {\n          // Dark mode colors\n          primary: {\n            main: highContrast ? '#60A0FF' : '#7986cb'\n          },\n          secondary: {\n            main: highContrast ? '#FF6090' : '#ff4081'\n          }\n        })\n      },\n      typography: {\n        fontSize: largeText ? 16 : 14,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        h1: {\n          fontSize: largeText ? '2.8rem' : '2.5rem'\n        },\n        h2: {\n          fontSize: largeText ? '2.3rem' : '2rem'\n        },\n        h3: {\n          fontSize: largeText ? '2rem' : '1.75rem'\n        },\n        h4: {\n          fontSize: largeText ? '1.8rem' : '1.5rem'\n        },\n        h5: {\n          fontSize: largeText ? '1.5rem' : '1.25rem'\n        },\n        h6: {\n          fontSize: largeText ? '1.3rem' : '1.1rem'\n        },\n        body1: {\n          lineHeight: lineSpacing\n        },\n        body2: {\n          lineHeight: lineSpacing\n        }\n      },\n      components: {\n        MuiButton: {\n          styleOverrides: {\n            root: {\n              borderRadius: '8px',\n              ...(highContrast && {\n                borderWidth: '2px'\n              })\n            }\n          }\n        },\n        MuiFocusVisible: {\n          styleOverrides: {\n            root: {\n              outline: focusIndicator === 'high' ? '3px solid #F00 !important' : focusIndicator === 'enhanced' ? '2px solid #0076FF !important' : undefined\n            }\n          }\n        }\n      }\n    });\n    return baseTheme;\n  }, [themeMode, highContrast, largeText, lineSpacing, focusIndicator]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      themeMode,\n      setThemeMode\n    },\n    children: /*#__PURE__*/_jsxDEV(AccessibilityContext.Provider, {\n      value: {\n        voiceAssist,\n        setVoiceAssist,\n        reduceMotion,\n        setReduceMotion,\n        highContrast,\n        setHighContrast,\n        largeText,\n        setLargeText,\n        lineSpacing,\n        setLineSpacing,\n        focusIndicator,\n        setFocusIndicator,\n        keyboardShortcuts,\n        setKeyboardShortcuts,\n        textSpacing,\n        setTextSpacing,\n        colorFilters,\n        setColorFilters\n      },\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: theme,\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AIContext.Provider, {\n          value: {\n            status: aiStatus,\n            setStatus: setAiStatus\n          },\n          children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n            children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n_s(Root, \"j1FrrB9An5VSQLAVri4zJ/GunC4=\");\n_c = Root;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 316,\n  columnNumber: 3\n}, this));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nvar _c;\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useMemo","ReactDOM","BrowserRouter","ThemeProvider","createTheme","CssBaseline","App","reportWebVitals","tf","jsxDEV","_jsxDEV","ThemeContext","themeMode","setThemeMode","AccessibilityContext","voiceAssist","setVoiceAssist","reduceMotion","setReduceMotion","highContrast","setHighContrast","largeText","setLargeText","lineSpacing","setLineSpacing","focusIndicator","setFocusIndicator","keyboardShortcuts","setKeyboardShortcuts","textSpacing","setTextSpacing","colorFilters","setColorFilters","AIContext","preloadAIModels","console","log","ready","initialized","error","message","Root","_s","savedMode","localStorage","getItem","savedValue","parseFloat","aiStatus","setAiStatus","loading","initializeAI","status","setItem","document","documentElement","setAttribute","classList","add","remove","body","style","setProperty","theme","baseTheme","palette","mode","primary","main","secondary","typography","fontSize","fontFamily","h1","h2","h3","h4","h5","h6","body1","lineHeight","body2","components","MuiButton","styleOverrides","root","borderRadius","borderWidth","MuiFocusVisible","outline","undefined","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","setStatus","_c","createRoot","getElementById","render","StrictMode","$RefreshReg$"],"sources":["/Users/saban/Desktop/New VisionAi 2.0/NewVisionAI/web/src/index.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useMemo } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\n// Import TensorFlow.js and preload the AI models\nimport * as tf from '@tensorflow/tfjs';\n\n// Create context for theme mode (light/dark)\nexport const ThemeContext = createContext({\n  themeMode: 'light',\n  setThemeMode: () => {},\n});\n\n// Create context for accessibility settings\nexport const AccessibilityContext = createContext({\n  voiceAssist: false,\n  setVoiceAssist: () => {},\n  reduceMotion: false,\n  setReduceMotion: () => {},\n  highContrast: false,\n  setHighContrast: () => {},\n  largeText: false,\n  setLargeText: () => {},\n  lineSpacing: 1,\n  setLineSpacing: () => {},\n  focusIndicator: 'default',\n  setFocusIndicator: () => {},\n  keyboardShortcuts: true,\n  setKeyboardShortcuts: () => {},\n  textSpacing: false,\n  setTextSpacing: () => {},\n  colorFilters: 'none',\n  setColorFilters: () => {},\n});\n\n// Context for AI functionality\nexport const AIContext = createContext(null);\n\n// Preload AI models when the app starts\nconst preloadAIModels = async () => {\n  try {\n    console.log('Preloading AI models...');\n    \n    // Warm up TensorFlow.js\n    await tf.ready();\n    console.log('TensorFlow.js is ready');\n    \n    // Return initialization status\n    return {\n      initialized: true,\n      error: null\n    };\n  } catch (error) {\n    console.error('Error preloading AI models:', error);\n    return {\n      initialized: false,\n      error: error.message\n    };\n  }\n};\n\n// Root application with contexts\nconst Root = () => {\n  // Initialize theme mode from localStorage or default to 'light'\n  const [themeMode, setThemeMode] = useState(() => {\n    const savedMode = localStorage.getItem('themeMode');\n    return savedMode || 'light';\n  });\n\n  // Initialize accessibility settings from localStorage\n  const [voiceAssist, setVoiceAssist] = useState(() => {\n    return localStorage.getItem('voiceAssist') === 'true';\n  });\n  \n  const [reduceMotion, setReduceMotion] = useState(() => {\n    return localStorage.getItem('reduceMotion') === 'true';\n  });\n  \n  const [highContrast, setHighContrast] = useState(() => {\n    return localStorage.getItem('highContrast') === 'true';\n  });\n  \n  const [largeText, setLargeText] = useState(() => {\n    return localStorage.getItem('largeText') === 'true';\n  });\n  \n  const [lineSpacing, setLineSpacing] = useState(() => {\n    const savedValue = localStorage.getItem('lineSpacing');\n    return savedValue ? parseFloat(savedValue) : 1;\n  });\n  \n  const [focusIndicator, setFocusIndicator] = useState(() => {\n    return localStorage.getItem('focusIndicator') || 'default';\n  });\n  \n  const [keyboardShortcuts, setKeyboardShortcuts] = useState(() => {\n    const savedValue = localStorage.getItem('keyboardShortcuts');\n    return savedValue === null ? true : savedValue === 'true';\n  });\n  \n  const [textSpacing, setTextSpacing] = useState(() => {\n    return localStorage.getItem('textSpacing') === 'true';\n  });\n  \n  const [colorFilters, setColorFilters] = useState(() => {\n    return localStorage.getItem('colorFilters') || 'none';\n  });\n\n  // AI state\n  const [aiStatus, setAiStatus] = useState({\n    initialized: false,\n    loading: true,\n    error: null\n  });\n\n  // Initialize AI models on component mount\n  useEffect(() => {\n    const initializeAI = async () => {\n      const status = await preloadAIModels();\n      setAiStatus({\n        initialized: status.initialized,\n        loading: false,\n        error: status.error\n      });\n    };\n    \n    initializeAI();\n  }, []);\n\n  // Update localStorage when theme mode changes\n  useEffect(() => {\n    localStorage.setItem('themeMode', themeMode);\n    \n    // Apply theme class to document for global CSS variables\n    document.documentElement.setAttribute('data-theme', themeMode);\n    \n    // Apply high contrast class if enabled\n    if (highContrast) {\n      document.documentElement.classList.add('high-contrast');\n    } else {\n      document.documentElement.classList.remove('high-contrast');\n    }\n    \n    // Apply reduced motion preference to body\n    if (reduceMotion) {\n      document.body.classList.add('reduce-motion');\n    } else {\n      document.body.classList.remove('reduce-motion');\n    }\n    \n    // Apply large text preference\n    if (largeText) {\n      document.body.classList.add('large-text');\n    } else {\n      document.body.classList.remove('large-text');\n    }\n    \n    // Apply line spacing\n    document.documentElement.style.setProperty('--line-height-multiplier', lineSpacing);\n    \n    // Apply focus indicator style\n    document.body.setAttribute('data-focus-indicator', focusIndicator);\n    \n    // Apply text spacing\n    if (textSpacing) {\n      document.body.classList.add('increased-spacing');\n    } else {\n      document.body.classList.remove('increased-spacing');\n    }\n    \n    // Apply color filters\n    document.body.setAttribute('data-color-filter', colorFilters);\n  }, [themeMode, highContrast, reduceMotion, largeText, lineSpacing, focusIndicator, textSpacing, colorFilters]);\n\n  // Update localStorage when accessibility settings change\n  useEffect(() => {\n    localStorage.setItem('voiceAssist', voiceAssist);\n    localStorage.setItem('reduceMotion', reduceMotion);\n    localStorage.setItem('highContrast', highContrast);\n    localStorage.setItem('largeText', largeText);\n    localStorage.setItem('lineSpacing', lineSpacing);\n    localStorage.setItem('focusIndicator', focusIndicator);\n    localStorage.setItem('keyboardShortcuts', keyboardShortcuts);\n    localStorage.setItem('textSpacing', textSpacing);\n    localStorage.setItem('colorFilters', colorFilters);\n  }, [voiceAssist, reduceMotion, highContrast, largeText, lineSpacing, focusIndicator, keyboardShortcuts, textSpacing, colorFilters]);\n\n  // Create theme with light/dark mode and accessibility preferences\n  const theme = useMemo(() => {\n    const baseTheme = createTheme({\n      palette: {\n        mode: themeMode,\n        ...(themeMode === 'light'\n          ? {\n              // Light mode colors\n              primary: {\n                main: highContrast ? '#0050A0' : '#3f51b5',\n              },\n              secondary: {\n                main: highContrast ? '#D03060' : '#f50057',\n              },\n            }\n          : {\n              // Dark mode colors\n              primary: {\n                main: highContrast ? '#60A0FF' : '#7986cb',\n              },\n              secondary: {\n                main: highContrast ? '#FF6090' : '#ff4081',\n              },\n            }),\n      },\n      typography: {\n        fontSize: largeText ? 16 : 14,\n        fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        h1: {\n          fontSize: largeText ? '2.8rem' : '2.5rem',\n        },\n        h2: {\n          fontSize: largeText ? '2.3rem' : '2rem',\n        },\n        h3: {\n          fontSize: largeText ? '2rem' : '1.75rem',\n        },\n        h4: {\n          fontSize: largeText ? '1.8rem' : '1.5rem',\n        },\n        h5: {\n          fontSize: largeText ? '1.5rem' : '1.25rem',\n        },\n        h6: {\n          fontSize: largeText ? '1.3rem' : '1.1rem',\n        },\n        body1: {\n          lineHeight: lineSpacing,\n        },\n        body2: {\n          lineHeight: lineSpacing,\n        },\n      },\n      components: {\n        MuiButton: {\n          styleOverrides: {\n            root: {\n              borderRadius: '8px',\n              ...(highContrast && {\n                borderWidth: '2px',\n              }),\n            },\n          },\n        },\n        MuiFocusVisible: {\n          styleOverrides: {\n            root: {\n              outline: focusIndicator === 'high' \n                ? '3px solid #F00 !important' \n                : focusIndicator === 'enhanced' \n                  ? '2px solid #0076FF !important' \n                  : undefined,\n            },\n          },\n        },\n      },\n    });\n\n    return baseTheme;\n  }, [themeMode, highContrast, largeText, lineSpacing, focusIndicator]);\n\n  return (\n    <ThemeContext.Provider value={{ themeMode, setThemeMode }}>\n      <AccessibilityContext.Provider\n        value={{\n          voiceAssist,\n          setVoiceAssist,\n          reduceMotion,\n          setReduceMotion,\n          highContrast,\n          setHighContrast,\n          largeText,\n          setLargeText,\n          lineSpacing,\n          setLineSpacing,\n          focusIndicator,\n          setFocusIndicator,\n          keyboardShortcuts,\n          setKeyboardShortcuts,\n          textSpacing,\n          setTextSpacing,\n          colorFilters,\n          setColorFilters,\n        }}\n      >\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <AIContext.Provider value={{\n            status: aiStatus,\n            setStatus: setAiStatus\n          }}>\n            <BrowserRouter>\n              <App />\n            </BrowserRouter>\n          </AIContext.Provider>\n        </ThemeProvider>\n      </AccessibilityContext.Provider>\n    </ThemeContext.Provider>\n  );\n};\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}